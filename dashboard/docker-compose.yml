# docker-compose.yml

version: '3.8'

services:
  # Servicio de la base de datos PostgreSQL
  postgres:
    image: postgres:13
    container_name: backstage_postgres
    environment:
      # Define las credenciales para la base de datos.
      # ¡IMPORTANTE! En un entorno de producción real, usa Docker Secrets o un .env file para estas variables.
      POSTGRES_USER: backstage
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: backstage_db
    volumes:
      # Monta un volumen para que los datos de la base de datos persistan
      # incluso si el contenedor se detiene o se elimina.
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - backstage-net

  # Servicio de la aplicación Backstage
  backstage:
    build:
      # Define el contexto y el Dockerfile para construir la imagen de Backstage.
      # Asume que tu aplicación Backstage está en la carpeta 'backstage-app'.
      context: ./backstage-app
      dockerfile: packages/backend/Dockerfile
    container_name: backstage_app
    ports:
      # Expone el puerto 7007 del contenedor al puerto 7007 de la máquina host.
      # Este es el puerto por defecto del backend de Backstage.
      - "7007:7007"
    environment:
      # Inyecta las variables de entorno para la conexión a la base de datos.
      # Estas deben coincidir con las credenciales del servicio 'postgres'.
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: backstage
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: backstage_db
    depends_on:
      # Asegura que el servicio 'postgres' se inicie antes que el servicio 'backstage'.
      - postgres
    networks:
      - backstage-net

networks:
  # Define una red interna para que los contenedores se comuniquen entre sí
  # de forma segura y por su nombre de servicio.
  backstage-net:
    driver: bridge
