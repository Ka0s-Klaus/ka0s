name: Ka0s Create Graphs

on:
  workflow_dispatch:
  push:
    paths:
      - 'core/scripts/**.py'
    branches:
      - 'master'

env:
  KAOS_REF_BRANCH: "master"

jobs:
  job-core:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.KAOS_REPO_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas plotly flask matplotlib scipy 

    - name: Run generating gcp_anomalous_spending_project_per_day_last_year
      run: |
        python core/scripts/gcp_anomalous_spending_project_per_day_last_year.py

    - name: Run generating gcp_anomalous_spending_service_per_day_last_year
      run: |
        python core/scripts/gcp_anomalous_spending_service_per_day_last_year.py

    - name: Run generating gcp_compute_engine_detailed_usage
      run: |
        python core/scripts/gcp_compute_engine_detailed_usage.py

    - name: Run generating gcp_project_min_max_avg_per_day
      run: |
        python core/scripts/gcp_project_min_max_avg_per_day.py

    - name: Run generating gcp_service_cost_between_dates
      run: |
        python core/scripts/gcp_service_cost_between_dates.py

    - name: Run generating gcp_service_cost_by_month_year
      run: |
          python core/scripts/gcp_service_cost_by_month_year.py

    - name: Run generating gcp_service_cost_by_month_over_month_year
      run: |
          python core/scripts/gcp_service_cost_by_month_over_month_year.py

    - name: Run generating gcp_forecast_service_cost_by_month_over_month_actual_year
      run: |
           python core/scripts/gcp_forecast_service_cost_by_month_over_month_actual_year.py

    - name: Run generating gcp_reservations_saving_plans_analysis
      run: |
            python core/scripts/gcp_reservations_saving_plans_analysis.py

    - name: Run generating gcp_unused_services_visualization
      run: |
           python core/scripts/gcp_unused_services_visualization.py

    - name: Upload visualization
      env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
      run: |
        git config --global user.name "${{ secrets.KAOS_BOT_NAME }}"
        git config --global user.email "${{ secrets.KAOS_BOT_EMAIL }}"
        git pull
        git add core/outputs/bq/visualizations/*
        git commit -m "[Ka0S] Update anomalous chart visualization"
        git push
        gh workflow run structurefinops.yml --ref ${{ env.KAOS_REF_BRANCH }}


  handle-success:
    runs-on: self-hosted
    needs: [job-core]
    if: ${{ success() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-success-execution
        name: Run BigQuery Cost Analysis
        run: |
          echo "Handle Success running ${{ env.KAOS_CODE }}"
          
      - id: end-handle
        name: Finaliza el workflow
        run: |
          echo "Handle Success please check ${{ env.KAOS_CODE }}"
      
  handle_failure:
      runs-on: self-hosted
      needs: [job-core, handle-success]
      if: ${{ failure() }} 
      steps:
        - id: repo
          name: Checkout code
          if: ${{ always() }}
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            token: ${{ secrets.KAOS_REPO_TOKEN }}
        - id: end-handle
          name: Finaliza el workflow
          run: |
            echo "Handle Failure please check ${{ env.KAOS_CODE }}"
  
  end-workflow:
      runs-on: self-hosted
      needs: [job-core, handle-success, handle_failure]
      if: ${{ always() && !contains(github.event.head_commit.message, '[Ka0S] ') }} 
      env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
      steps:
        - id: repo
          name: Checkout code
          if: ${{ always() }}
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            token: ${{ secrets.KAOS_REPO_TOKEN }}
        - id: end-process
          name: Finaliza el workflow
          run: |
            echo "End process"
            echo "Se finaliza Ka0s ${{ env.KAOS_CODE }}"
            gh workflow run inspector.yml --ref ${{ env.KAOS_REF_BRANCH }} -f kaos-issue-id= -f kaos-workflow-id="${{ env.KAOS_CODE }}" -f kaos-user-start=""
    