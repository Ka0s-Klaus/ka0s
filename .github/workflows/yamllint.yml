name: Ka0s YAML Lint

on:
  workflow_dispatch:
    inputs:
      kaos-origin:
        description: 'Dispatcher Workflow Run ID'
        default: ""
        required: true
      kaos-files:
        description: 'Files Involved'
        default: ""
        required: true
      kaos-issue-id:
        description: 'Issue ID'
        default: "Kaos Issue ID"
        required: true
      kaos-user-start:
        description: 'User initiated process'
        default: ""
        required: true
  
permissions:
  contents: write
  actions: write
  issues: write
  pull-requests: write

env:
  KAOS_MODULE: "[Ka0S] YAMLLINT"
  GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
  KAOS_YAMLLINT_CONFIG: "core/config/.yamllint.json"
  KAOS_PATH_RESUME: "audit/yamllint/"
  KAOS_REPO: "/actions-runner/_work/kaos/kaos"
  KAOS_STEP_MODULE: ""
  KAOS_CODE: ${{ github.run_id}}

jobs:
  job-core:
    runs-on:
      group: ka0s

    steps:
      - id: repo
        name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
    
      - id: python
        name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
  
      - id: install-yamllint
        name: Install yamllint
        run: |
          python -m pip install yamllint

      - id: check-yaml
        name: Check YAML
        run: |
            # Invocamos la primera comprobación de base, sino se supera el proceso no continua
            # Ejecutamos el comando
            yamllint -c ${{ env.KAOS_YAMLLINT_CONFIG }} "${{ github.event.inputs.kaos-files }}" > ${{ env.KAOS_PATH_RESUME }}yaml-lint-results-${{ github.run_id }}.txt 2>&1 || true
              # Check if exist errors in file
              if [ ! -s ${{ env.KAOS_PATH_RESUME}}yaml-lint-results-${{ github.run_id }}.txt ]; then
                # Todo ha salido bien, añadimos el comentario a la issue y saltamos al siguiente paso
                # Añadimos la versión de yamllint con la que se realiza la comprobacion
                yamllint --version >> ${{ env.KAOS_PATH_RESUME }}yaml-lint-results-${{ github.run_id }}.txt
                # añadimos el nombre del fichero que vamos a comprobar
                echo "Finding: ${{ github.event.inputs.kaos-files }}" >> ${{ env.KAOS_PATH_RESUME }}yaml-lint-results-${{ github.run_id }}.txt
                KAOS_ISSUE_BODY="The ${{ env.KAOS_MODULE }} process (${{ github.event.inputs.kaos-origin }}) launch the check (${{ github.run_id }}) over file (${{ github.event.inputs.kaos-files }}) and its result has been SUCCESS. Please review all files implicated in pull request and approve to merge"
                # gh workflow run issue.yaml --ref ${{ github.ref }} -f kaos-issue-title="" -f kaos-issue-body="$KAOS_ISSUE_BODY" -f kaos-issue-actions=comment -f kaos-issue-tag="" -f kaos-issue-id=${{ github.event.inputs.kaos-issue-id }}
                gh issue comment  ${{ github.event.inputs.kaos-issue-id }} -f kaos-issue-body="$KAOS_ISSUE_BODY" 
                # una vez finalizado este proceso, en funcion del modulo donde esta ubicado el fichero que se ha comprobado ejecutara un jobs u otro                
              else
                # Algo no ha salido bien, añadimos el comentario a la issue y saltamos al siguiente paso
                # Añadimos la versión de yamllint con la que se realiza la comprobacion
                yamllint --version >> ${{ env.KAOS_PATH_RESUME }}yaml-lint-results-${{ github.run_id }}.txt
                # añadimos el nombre del fichero que vamos a comprobar
                echo "Finding: ${{ github.event.inputs.kaos-files }}" >> ${{ env.KAOS_PATH_RESUME }}yaml-lint-results-${{ github.run_id }}.txt
                KAOS_ISSUE_BODY="The ${{ env.KAOS_MODULE }} process (${{ github.event.inputs.kaos-origin }}) launch the check (${{ github.run_id }}) over file (${{ github.event.inputs.kaos-files }}) and its result has been FAILED, please check and solved it"
                gh workflow run issue.yaml --ref ${{ github.ref }} -f kaos-issue-title="" -f kaos-issue-body="$KAOS_ISSUE_BODY" -f kaos-issue-actions=comment -f kaos-issue-tag="" -f kaos-issue-id=${{ github.event.inputs.kaos-issue-id }}
                gh issue comment  ${{ github.event.inputs.kaos-issue-id }} -f kaos-issue-body="$KAOS_ISSUE_BODY"
                # una vez finalizado este proceso, en funcion del modulo donde esta ubicado el ficher que se ha comprobado ejecutara un jobs u otro 
              fi
            echo "Uploading files to the repository..."
            git config --global user.name "${{ secrets.KAOS_BOT_NAME }}"
            git config --global user.email "${{ secrets.KAOS_BOT_EMAIL }}"
            git pull
            git add ${{ env.KAOS_PATH_RESUME }}*
            if ! git diff --staged --quiet; then
              git commit -m "[Ka0S] Uploading yamllint resume execution files to the repository..."
              git push origin ${{ github.ref }}
            fi
  handle-success:
    runs-on:
      group: ka0s
    needs: [job-core]
    if: ${{ success() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-success-execution
        name: handle-success-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          # Si todo ha ido correcto añadimos el contenido del fichero 
          RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          gh issue comment $RNNUMBER --body "El proceso ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero ${{ env.KAOS_CODE }}.log"
  handle_failure:
    runs-on:
      group: ka0s
    needs: [job-core, handle-success]
    if: ${{ failure() }} 
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-failure-execution
        name: handle-failure-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          echo "Error detected in process"
          RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          gh issue comment $RNNUMBER --body "El proceso no ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero ${{ env.KAOS_CODE }}.log"
  end-workflow:
    runs-on:
      group: ka0s
    needs: [job-core, handle-success, handle_failure]
    if: ${{ always() }} 
    env:
        GH_TOKEN: ${{ secrets.KAOS_ACTIONS_TOKEN }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: end-process
        name: Finaliza el workflow
        run: |
          echo "End process"
          RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          gh issue comment $RNNUMBER --body "Se finaliza Ka0s ${{ env.KAOS_CODE }}"
          gh workflow run inspector.yml --ref 'main' -f kaos-issue-id=$RNNUMBER -f kaos-workflow-id="${{ env.KAOS_CODE }}" -f kaos-user-start=""
