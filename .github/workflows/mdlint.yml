name: Ka0s Markdown Lint

on:
  workflow_dispatch:
    inputs:
      kaos-origin:
        description: 'Dispatcher Workflow Run ID'
        default: ""
        required: true
      kaos-files:
        description: 'Files Involved'
        default: ""
        required: true
      kaos-issue-id:
        description: 'Issue ID'
        default: "Kaos Issue ID"
        required: true
      kaos-user-start:
        description: 'User initiated process'
        default: ""
        required: true
  
permissions:
  contents: write
  actions: write
  issues: write
  pull-requests: write

env:
  KAOS_MODULE: "[Ka0S] MDLINT"
  GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
  FILE_ERROR: ""
  KAOS_MD_CONFIG: "core/config/.markdownlint.json"
  KAOS_PATH_RESUME: "core/results/m/"
  KAOS_REPO: "/actions-runner/_work/kaos/kaos"
  KAOS_STEP_MODULE: ""
  KAOS_CODE: ${{ github.ref }}
  
jobs:
  job-core:
    runs-on: ubuntu-latest
    #  group: mdlint
    steps:
      - id: repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - id: markdownlint-cli2
        run: |
          npm install -g markdownlint-cli2
      - id: check-md
        run: |
            # Realizamos el check del documento md 
                # Run markdownlint with the specified files and ignore rules
                markdownlint-cli2 ${{ github.event.inputs.kaos-files }} --config ${{ env.KAOS_MD_CONFIG }} > ${{ env.KAOS_PATH_RESUME }}mdlint-results-${{ github.run_id }}.txt 2>&1 || true
                # Check if exist errors in file
                # Abre el fichero en modo lectura y lee todas las líneas
                lines=$(cat ${{ env.KAOS_PATH_RESUME }}mdlint-results-${{ github.run_id }}.txt)
                # Inicializa la variable summary_value
                summary_value=""
                # Busca la línea que contiene "Summary:"
                while IFS= read -r line; do
                    if [[ "$line" == *"Summary:"* ]]; then
                        # Extrae el número después de "Summary:"
                        summary_value=$(echo "$line" | awk -F'Summary: ' '{print $2}' | awk '{print $1}')
                        break
                    fi
                done <<< "$lines"
                # Comprueba si el valor es cero
                if [ "$summary_value" == "0" ]; then
                  echo "File ${{ env.KAOS_PATH_RESUME }}mdlint-results-${{ github.run_id }}.txt is empty and $file is content correct"
                  KAOS_ISSUE_BODY="The ${{ env.KAOS_MODULE }} process (${{ github.event.inputs.kaos-origin }}) launch the check (${{ github.run_id }}) over file (${{ github.event.inputs.kaos-files }}) and its result has been SUCCESS. Please MERGE"
                  gh issue comment ${{ github.event.inputs.kaos-issue-id }} -b "$KAOS_ISSUE_BODY"
                  gh issue comment  ${{ github.event.inputs.kaos-issue-id }} -F ${{ env.KAOS_PATH_RESUME }}mdlint-results-${{ github.run_id }}.txt
                else
                  echo "File ${{ env.KAOS_PATH_RESUME }}mdlint-results-${{ github.run_id }}.txt is not empty and $file is content not correct and write commit info"
                  KAOS_ISSUE_BODY="The ${{ env.KAOS_MODULE }} process (${{ github.event.inputs.kaos-origin }}) launch the check (${{ github.run_id }}) over file (${{ github.event.inputs.kaos-files }}) and its result has been FAILED, please check and solved it"
                  gh issue comment ${{ github.event.inputs.kaos-issue-id }} -b "$KAOS_ISSUE_BODY"
                  gh issue comment  ${{ github.event.inputs.kaos-issue-id }} -F ${{ env.KAOS_PATH_RESUME }}mdlint-results-${{ github.run_id }}.txt
                fi
  handle-success:
    runs-on: ubuntu-latest
    #  group: ka0s
    needs: [job-core]
    if: ${{ success() }}
    steps:
      - id: handle-success-execution
        name: handle-success-execution
        run: |
          # Si todo ha ido correcto añadimos el contenido del fichero 
          echo "Todo ha ido bien"
  handle_failure:
    runs-on: ubuntu-latest
    #  group: ka0s
    needs: [job-core, handle-success]
    if: ${{ failure() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-failure-execution
        name: handle-failure-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          echo "Error detected in ${{ env.KAOS_MODULE }}, creating issue..."
          gh issue comment ${{ github.event.inputs.kaos-issue-id }} --body "El proceso no ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero ${{ env.KAOS_PATH_RESUME }}mdlint-results-${{ github.run_id }}.txt"
  end-workflow:
    runs-on: ubuntu-latest
    #  group: ka0s
    needs: [job-core, handle-success]
    if: ${{ always() }} 
    env:
      GH_TOKEN: ${{ secrets.KAOS_ACTIONS_TOKEN }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: end-process
        name: Finaliza el workflow
        run: |
          echo "End process"
          gh workflow run inspector.yml --ref 'main' -f kaos-issue-id="${{ github.event.inputs.kaos-issue-id }} -f kaos-workflow-id="${{ env.KAOS_CODE }}" -f kaos-user-start="${{ github.event.inputs.kaos-user-start }}"