name: Ka0s Workflow Statistics Summary

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual trigger

env:
    KAOS_CODE: ${{ github.run_id }}
    KAOS_EVENT_NAME: ${{ github.event_name }}
    KAOS_ACTION: ${{ github.action }}
    KAOS_REF: ${{ github.ref }}
    KAOS_MODULE: "[Ka0S] Workflow Statistics Summary"
    KAOS_PATH_RESUME: "core/outputs/w/"
    KAOS_JSON: "core/results/event_data_"
    KAOS_ACTOR: ${{ github.actor }}

jobs:
  job-core:
    runs-on:
      group: ka0s
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}

      - name: Collect workflow statistics
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          # Create output directory
          mkdir -p core/results/dashboard

          # Initialize JSON structure
          echo '{
            "metadata": {
              "run_id": "'$GITHUB_RUN_ID'",
              "collected_at": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'",
              "components": ["workflow_stats"],
              "repository": "'$GITHUB_REPOSITORY'"
            },
            "components": {
              "workflow_stats": {
                "type": "workflow_stats",
                "title": "Workflow Statistics",
                "data": {
                  "generated_at": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'",
                  "repository": "'$GITHUB_REPOSITORY'",
                  "modules": [' > core/results/dashboard/workflow_stats.json

          # Get all workflows
          workflows=$(gh api repos/$GITHUB_REPOSITORY/actions/workflows)
          total_workflows=$(echo "$workflows" | jq '.total_count')
          active_workflows=$(echo "$workflows" | jq '[.workflows[] | select(.state=="active")] | length')
          total_success=0
          total_runs=0

          # Process each workflow
          echo "$workflows" | jq -c '.workflows[]' | while read -r workflow; do
            workflow_id=$(echo "$workflow" | jq -r '.id')
            workflow_name=$(echo "$workflow" | jq -r '.name')
            workflow_state=$(echo "$workflow" | jq -r '.state')
            workflow_path=$(echo "$workflow" | jq -r '.path')
            workflow_created_at=$(echo "$workflow" | jq -r '.created_at')

            # Get workflow runs
            runs=$(gh api repos/$GITHUB_REPOSITORY/actions/workflows/$workflow_id/runs --paginate)
            
            # Calculate metrics
            success_count=$(echo "$runs" | jq '[.workflow_runs[] | select(.conclusion=="success")] | length')
            failure_count=$(echo "$runs" | jq '[.workflow_runs[] | select(.conclusion=="failure")] | length')
            cancelled_count=$(echo "$runs" | jq '[.workflow_runs[] | select(.conclusion=="cancelled")] | length')
            total_count=$(echo "$runs" | jq '[.workflow_runs[]] | length')

            # Calculate lead time
            lead_time=$(echo "$runs" | jq -r '[.workflow_runs[] | select(.status=="completed") | (if .updated_at and .created_at then (strptime(.updated_at) - strptime(.created_at)) else 0 end)] | add / length')

            # Calculate success rate
            success_rate=0
            if [ "$total_count" -gt 0 ]; then
              success_rate=$(echo "scale=2; $success_count * 100 / $total_count" | bc)
            fi

            # Calculate last 30 days metrics
            thirty_days_ago=$(date -v-30d +%s)
            last_30_days_metrics=$(echo "$runs" | jq --arg date "$thirty_days_ago" '
              [.workflow_runs[] | select((.created_at | fromdateiso8601) >= ($date | tonumber))] | {
                "runs": length,
                "success": map(select(.conclusion == "success")) | length,
                "failures": map(select(.conclusion == "failure")) | length
              }')

            # Add to total counts
            total_success=$((total_success + success_count))
            total_runs=$((total_runs + total_count))

            # Write workflow stats
            echo "{
              \"module_name\": \"$workflow_name\",
              \"total_success\": $success_count,
              \"total_failures\": $failure_count,
              \"total_cancelled\": $cancelled_count,
              \"total_runs\": $total_count,
              \"lead_time\": $lead_time,
              \"success_rate\": $success_rate,
              \"last_30_days\": $last_30_days_metrics,
              \"workflow_id\": $workflow_id,
              \"state\": \"$workflow_state\",
              \"path\": \"$workflow_path\",
              \"created_at\": \"$workflow_created_at\"
            }," >> core/results/dashboard/workflow_stats.json
          done

          # Calculate global metrics
          overall_success_rate=0
          if [ "$total_runs" -gt 0 ]; then
            overall_success_rate=$(echo "scale=2; $total_success * 100 / $total_runs" | bc)
          fi

          # Complete the JSON structure
          sed -i '' '$ s/,$//' core/results/dashboard/workflow_stats.json
          echo "],
                  \"global_metrics\": {
                    \"total_workflows\": $total_workflows,
                    \"active_workflows\": $active_workflows,
                    \"total_runs_all_workflows\": $total_runs,
                    \"overall_success_rate\": $overall_success_rate
                  }
                }
              }
            }
          }" >> core/results/dashboard/workflow_stats.json

      - name: Commit and push changes
        run: |
          git config --global user.name "${{ secrets.KAOS_BOT_NAME }}"
          git config --global user.email "${{ secrets.KAOS_BOT_EMAIL }}"
          git add core/results/dashboard/workflow_stats.json
          git commit -m "Update workflow statistics" || exit 0
          git push

  handle-success:
    runs-on:
      group: ka0s
    needs: [job-core]
    if: ${{ success() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-success-execution
        name: handle-success-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          gh issue comment $RNNUMBER --body "El proceso ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data${{ env.KAOS_CODE }}.log"

  handle_failure:
    runs-on:
      group: ka0s
    needs: [job-core, handle-success]
    if: ${{ failure() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-failure-execution
        name: handle-failure-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          echo "Error detected in process"
          RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          gh issue comment $RNNUMBER --body "El proceso no ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data${{ env.KAOS_CODE }}.log"

  end-workflow:
    runs-on:
      group: ka0s
    needs: [job-core, handle-success, handle_failure]
    if: ${{ always() && !contains(github.event.head_commit.message, '[Ka0S] ') }}
    env:
        GH_TOKEN: ${{ secrets.KAOS_ACTIONS_TOKEN }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: end-process
        name: Finaliza el workflow
        run: |
          echo "End process"
          RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          gh issue comment $RNNUMBER --body "Se finaliza Ka0s ${{ env.KAOS_CODE }}"
          gh workflow run inspector.yml --ref 'main' -f kaos-issue-id=$RNNUMBER -f kaos-workflow-id="${{ env.KAOS_CODE }}" -f kaos-user-start=""
