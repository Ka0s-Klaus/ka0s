name: Ka0s Pattern Scan Re Runs Jobs

on:
    schedule:
      - cron: '0 0 * * *'  # Run daily at midnight
    workflow_dispatch:  # Allow manual trigger
env:
    KAOS_CODE: ${{ github.run_id }}
    KAOS_EVENT_NAME: ${{ github.event_name }}
    KAOS_ACTION: ${{ github.action }}
    KAOS_REF: ${{ github.ref }}
    KAOS_MODULE: "[Ka0S] Pattern Scan"
    KAOS_PATH_RESUME: "core/results/s/"
    KAOS_ACTOR: ${{ github.actor }}

jobs:
  scan-files:
    runs-on: ka0s
    steps:
      - name: Checkout code
        id: repo
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
           fetch-depth: 0
           token: ${{ secrets.KAOS_REPO_TOKEN }}

      - name: Find files with patterns
        id: pattern-scan
        continue-on-error: true
        run: |
          PATTERNS=('connection lost' 'timeout' 'error')
          MATCHED_FILES=()
          
          for file in $(find ./core/outputs/i/ -type f -name "*.json"); do
            for pattern in "${PATTERNS[@]}"; do
              if grep -q "$pattern" "$file"; then
                filename=$(basename "$file" .json)
                MATCHED_FILES+=("$filename")
                break
              fi
            done
          done
          
          echo "::set-output name=matched_files::${MATCHED_FILES[*]}"

      - name: Use matched files with gh CLI
        if: steps.pattern-scan.outputs.matched_files != ''
        continue-on-error: true
        run: |
          for file in ${{ steps.pattern-scan.outputs.matched_files }}; do
            if ! gh issue create --title "Pattern found in $file" --body "File $file contains specified patterns and re run job number $file. Please check result if and correct, close issue."; then
              echo "Failed to create issue for $file"
            fi
            if ! gh run rerun $file --failed; then
              echo "Failed to rerun job $file"
            fi
          done

  handle-success:
    runs-on:
      group: ka0s
    needs: [scan-files]
    if: ${{ success() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-success-execution
        name: handle-success-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          # RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          # gh issue comment $RNNUMBER --body "El proceso ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data_${{ env.KAOS_CODE }}.log"
          echo "El proceso ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data_${{ env.KAOS_CODE }}.log"

  handle_failure:
    runs-on:
      group: ka0s
    needs: [scan-files, handle-success]
    if: ${{ failure() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-failure-execution
        name: handle-failure-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          echo "Error detected in process"
          # RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          # gh issue comment $RNNUMBER --body "El proceso no ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data${{ env.KAOS_CODE }}.log"
          # Creamos la issue dado que ha fallado el modulo principal
          gh issue create  --title "[Ka0S] Error detected in ${{ env.KAOS_MODULE }}" --body "Error detected in ${{ env.KAOS_MODULE }}. Please check the logs for ${{ github.run_id }} more information of error."
          
  end-workflow:
    runs-on:
      group: ka0s
    needs: [scan-files, handle-success, handle_failure]
    if: ${{ always() && !contains(github.event.head_commit.message, '[Ka0S] ') }}
    env:
        GH_TOKEN: ${{ secrets.KAOS_ACTIONS_TOKEN }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: end-process
        name: Finaliza el workflow
        run: |
          echo "End process"
          # RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          # gh issue comment $RNNUMBER --body "Se finaliza Ka0s ${{ env.KAOS_CODE }}"
          echo "Se finaliza Ka0s ${{ env.KAOS_CODE }}"
          gh workflow run inspector.yml --ref 'main' -f kaos-issue-id=$RNNUMBER -f kaos-workflow-id="${{ env.KAOS_CODE }}" -f kaos-user-start=""
