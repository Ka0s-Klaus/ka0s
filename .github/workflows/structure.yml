name: Ka0s structure for dashboard
on:
  push:
    branches: [ main ]
    paths:
      - 'core/web/**'
  workflow_dispatch:
env:
    KAOS_CODE: ${{ github.run_id }}
    KAOS_EVENT_NAME: ${{ github.event_name }}
    KAOS_ACTION: ${{ github.action }}
    KAOS_REF: ${{ github.ref }}
    KAOS_MODULE: "[Ka0S] Deploy Web Structure"
    KAOS_JSON: "core/outputs/webs/" # directorio que aloja los json de resultados de la operación 
    KAOS_WEB_STRUCTURE: "core/results/webs/" # directorio donde se alojan las diferentes estructura de webs
    KAOS_WEB_REQUEST: "core/web/structure/*.json" # esta variable indica el fichero de estructura que hay que crear
    KAOS_ACTOR: ${{ github.actor }}
jobs:
  job-core:
    runs-on:
      group: ka0s
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      
      - name: Copy web folder structure
        run: |
          # Read the structure.json file to get folder names
          echo "Reading structure.json file..."
          STRUCTURE_FILE="core/web/structure/*.json"
          
          # Extract title for main folder name
          TITLE=$(cat $STRUCTURE_FILE | grep -o '"title": *"[^"]*"' | cut -d'"' -f4)
          echo "Main folder will be named: $TITLE"
          
          # Comprobamos donde estamos en el repo
          echo "Estamos aquí ......" && pwd
          echo "Esta es la estructura que vemos ..." && ls -la
          echo "Esta es la estructura web ....." && ls -la core/results/webs

          # Create main directory
          mkdir -p "${{ env.KAOS_WEB_STRUCTURE }}$TITLE"
          
          # Extract section names and create subfolders
          cat $STRUCTURE_FILE | grep -o '"section[^"]*": *"[^"]*"' | while read -r section; do
            SECTION_NAME=$(echo $section | cut -d'"' -f4)
            echo "Creating subfolder: $SECTION_NAME"
            mkdir -p "$TITLE/$SECTION_NAME"
          done
          
          # echo "Copying web folder structure to dashboard..."
          # Create destination directory if it doesn't exist
          # mkdir -p ${{ env.KAOS_JSON }}$TITLE
          
          # Copy the directory structure (without files)
          find core/web -type d | while read dir; do
            if [ "$dir" != "core/web" ]; then
              target_dir="/${{ env.KAOS_WEB_STRUCTURE }}$TITLE/${dir#core/web/}"
              mkdir -p "$target_dir"
              echo "Created directory: $target_dir"
            fi
          done
          
          # Create a JSON file with the structure information
          echo "[" > ${{ env.KAOS_WEB_STRUCTURE }}$TITLE/structure.json
          find core/web -type d | sort | while read dir; do
            if [ "$dir" != "core/web" ]; then
              echo "  {\"FullName\": \"$dir\"}," >> ${{ env.KAOS_WEB_STRUCTURE }}$TITLE/structure.json
            fi
          done
          # Remove the last comma and close the JSON array
          sed -i '$ s/,$//' ${{ env.KAOS_WEB_STRUCTURE }}$TITLE/*.json
          echo "]" >> ${{ env.KAOS_WEB_STRUCTURE }}$TITLE/*.json
          
          echo "Web folder structure copied successfully!"

      - id: upload-files
        name: Upload Files
        run: |
          echo "Uploading files to the repository..."
          git config --global user.name "${{ secrets.KAOS_BOT_NAME }}"
          git config --global user.email "${{ secrets.KAOS_BOT_EMAIL }}"
          git pull
          # Asegurarse de que la carpeta web_structure se añade explicitamente
          git add ${{ env.KAOS_WEB_STRUCTURE }}*
          # Verificar si hay cambios para hacer commit
          if git diff --staged --quiet; then
            echo "No hay cambios para hacer commit"
          else
            git commit -m "[Ka0S] Uploading resume execution files and web structure to the repository..."
            git push origin ${{ env.KAOS_REF }}
          fi
       
  handle-success:
    runs-on:
      group: ka0s
    needs: [job-core]
    if: ${{ success() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-success-execution
        name: handle-success-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          # Si todo ha ido correcto añadimos el contenido del fichero
          # RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          RNNUMBER=220
          gh issue comment $RNNUMBER --body "El proceso ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data${{ env.KAOS_CODE }}.log"
  
  handle_failure:
    runs-on:
      group: ka0s
    needs: [job-core, handle-success]
    if: ${{ failure() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-failure-execution
        name: handle-failure-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          echo "Error detected in process"
          # RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          RNNUMBER=220
          gh issue comment $RNNUMBER --body "El proceso no ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data${{ env.KAOS_CODE }}.log"
  end-workflow:
    runs-on:
      group: ka0s
    needs: [job-core, handle-success, handle_failure]
    if: ${{ always() && !contains(github.event.head_commit.message, '[Ka0S] ') }}
    env:
        GH_TOKEN: ${{ secrets.KAOS_ACTIONS_TOKEN }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: end-process
        name: Finaliza el workflow
        run: |
          echo "End process"
          # RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          RNNUMBER=220
          gh issue comment $RNNUMBER --body "Se finaliza Ka0s ${{ env.KAOS_CODE }}"
          gh workflow run inspector.yml --ref 'main' -f kaos-issue-id=$RNNUMBER -f kaos-workflow-id="${{ env.KAOS_CODE }}" -f kaos-user-start=""

  