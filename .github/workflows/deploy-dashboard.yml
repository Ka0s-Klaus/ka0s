name: Ka0s Deploy Webs
 
on:
  push:
    branches: [ main ]
    paths:
      # Ajustar el path si el contenido del dashboard está en una subcarpeta
      - 'core/results/webs/dashboard/**' 
  workflow_dispatch:

env:
    KAOS_CODE: ${{ github.run_id }}
    KAOS_EVENT_NAME: ${{ github.event_name }}
    KAOS_ACTION: ${{ github.action }}
    KAOS_REF: ${{ github.ref }}
    KAOS_MODULE: "[Ka0S] Deploy Webs"
    # Ajustar KAOS_PATH_ORIGIN para apuntar específicamente al contenido del dashboard
    KAOS_PATH_ORIGIN: "core/results/webs/dashboard/" 
    # Ajustar KAOS_PATH_WEB para apuntar al directorio del dashboard en el servidor
    KAOS_PATH_WEB: "/html/dashboard/" 
    KAOS_PATH_RESUME: "core/results/dw/"
    KAOS_FILE_STATE: "ftp-deploy-sync-state.json"
    KAOS_ACTOR: ${{ github.actor }}

jobs:
  job-core:
    runs-on:
      group: ka0s
    steps:
      - id: repo
        name: Checkout repository
        if: ${{ success() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
          
      - name: Deploy Dashboard to Web Server via SFTP
        id: sftp
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.KAOS_WEB_SERVER }}
          username: ${{ secrets.KAOS_WEB_USER }}
          password: ${{ secrets.KAOS_WEB_TOKEN }}
          port: ${{ secrets.KAOS_WEB_PORT }}
          # local-dir ahora apunta a la carpeta específica del dashboard
          local-dir: ${{ env.KAOS_PATH_ORIGIN }} 
          # server-dir ahora apunta a la carpeta específica del dashboard en el servidor
          server-dir: ${{ env.KAOS_PATH_WEB }} 
          # dangerous-clean-slate ahora limpiará solo el contenido de server-dir (/html/dashboard/)
          dangerous-clean-slate: true 
          state-name: ${{ env.KAOS_PATH_RESUME }}${{ env.KAOS_CODE }}-${{ env.KAOS_FILE_STATE }}
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
         
  handle-success:
    runs-on:
      group: ka0s
    needs: [job-core]
    if: ${{ success() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-success-execution
        name: handle-success-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          # Si todo ha ido correcto añadimos el contenido del fichero
          # gh issue comment $RNNUMBER --body "El proceso ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data_${{ env.KAOS_CODE }}.log"
          echo "El proceso ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data_${{ env.KAOS_CODE }}.log"

  handle_failure:
    runs-on:
      group: ka0s
    needs: [job-core, handle-success]
    if: ${{ failure() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-failure-execution
        name: handle-failure-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          echo "Error detected in process"
          # gh issue comment $RNNUMBER --body "El proceso no ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data_${{ env.KAOS_CODE }}.log"
          echo "El proceso no ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data_${{ env.KAOS_CODE }}.log"

  end-workflow:
    runs-on:
      group: ka0s
    needs: [job-core, handle-success, handle_failure]
    if: ${{ always() && !contains(github.event.head_commit.message, '[Ka0S] ') }}
    env:
        GH_TOKEN: ${{ secrets.KAOS_ACTIONS_TOKEN }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: end-process
        name: Finaliza el workflow
        run: |
          echo "End process"
          echo "Se finaliza Ka0s ${{ env.KAOS_CODE }}"
          gh workflow run inspector.yml --ref 'main' -f kaos-issue-id=$RNNUMBER -f kaos-workflow-id="${{ env.KAOS_CODE }}" -f kaos-user-start=""
