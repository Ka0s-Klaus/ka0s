name: swarm-runners Status MongDB Report

on:
  schedule:
    - cron: '10 * * * *'  # Ejecuci칩n cada hora en el minuto 10
permissions:
  issues: write
  pull-requests: write
  
env:
  PYTHON_VERSION: '3.9'
  MONGO_SUPERUSER_CONNECTION: ${{ secrets.DB_CONNECTION_STRING}}
  MONGO_NEW_PASS: ${{ secrets.DB_INITIAL_PASSWORD }}
  MONGO_SCRIPT_CREATE: core/database/scripts/mongodb_status_report.py
  KAOS_CODE: ${{ github.run_id }}
  REPORT_SCAN: "audit/"
  REPORT_PATH: audit/mongodb/
  REPORT_FILENAME: ${{ github.run_id }}.json

jobs:
  job-core:
    runs-on:
      group: swarm-runners
    env:
      GITHUB_OUTPUT: ""
    if: ${{ !contains(github.event.head_commit.message, '[swarm-runners] ') }}  
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: pip install pymongo

      - name: Create database MongoDB
        run: |
         python ${{ env.MONGO_SCRIPT_CREATE }}
         echo "Downloading files to MongoDB update repository ..."
         git config --global user.name "${{ secrets.KAOS_BOT_NAME }}"
         git config --global user.email "${{ secrets.KAOS_BOT_EMAIL }}"
         git pull --rebase
         echo "Uploading files to MongoDB update repository ..."
         git add ${{ env.REPORT_PATH }}
         if ! git diff --staged --quiet; then
            git commit -m "swarm-runners] Uploading files to MongoDB update repository ..."
            git push origin ${{ github.ref }} --force-with-lease
          fi


      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: mongo-setup-report
          path: ${{ env.REPORT_PATH }}

  handle-success:
    runs-on:
      group: swarm-runners
    needs: [job-core]
    if: ${{ success() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-success-execution
        name: handle-success-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          # Si todo ha ido correcto a침adimos el contenido del fichero 
          echo "Process completed successfully ${{ env.KAOS_CODE }}"
          # RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          # gh issue comment $RNNUMBER --body "El proceso ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado est치 en el fichero core/results/event_data_${{ env.KAOS_CODE }}.log"
  handle_failure:
    runs-on:
      group: swarm-runners
    needs: [job-core, handle-success]
    if: ${{ failure() }} 
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-failure-execution
        name: handle-failure-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          echo "Error detected in process"
          echo "Created issue"
          gh issue create  --title "[swarm-runners] Error detected in ${{ env.KAOS_MODULE }}" --label "bug" --body "Error detected in ${{ env.KAOS_MODULE }}. Please check the logs for ${{ github.run_id }} more information of error."
          echo "Add comment to origin target"
          RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          gh issue comment $RNNUMBER --body "El proceso no ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado est치 en el fichero ${{ env.KAOS_CODE }}.log"
  end-workflow:
    runs-on:
      group: swarm-runners
    needs: [job-core, handle-success, handle_failure]
    if: ${{ always() }} 
    env:
        GH_TOKEN: ${{ secrets.KAOS_ACTIONS_TOKEN }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: end-process
        name: Finaliza el workflow
        run: |
          echo "End process ${{ env.KAOS_CODE }}"
          # RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          # gh issue comment $RNNUMBER --body "Se finaliza swarm-runners ${{ env.KAOS_CODE }}"
          # gh workflow run inspector.yml --ref 'main' -f kaos-issue-id= -f kaos-workflow-id="${{ env.KAOS_CODE }}" -f kaos-user-start=""
        
