name: Ka0s 
on: 
  push:
    paths:
      - '**.html'
      - '**.js'
      - '**.yaml'
      - '**.yml'
      - '**.json'
      - '**.md'
      - '**.py'
    branches:
      - 'H*'
      - 'F*'
      - 'RN*'
env:
    KAOS_CODE: ${{ github.run_id }}
    KAOS_EVENT_NAME: ${{ github.event_name }}
    KAOS_ACTION: ${{ github.action }}
    KAOS_REF: ${{ github.ref }}
    KAOS_MODULE: "[Ka0S] kaos"
    KAOS_PATH_RESUME: "audit/kaos/"
    KAOS_ACTOR: ${{ github.actor }}
jobs: 
  job-core:
    runs-on:
      group: ka0s
    env:
      GITHUB_OUTPUT: ""
    if: ${{ !contains(github.event.head_commit.message, '[Ka0S] ') }} 
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
          
      - id: validate
        name: Validate file extensions
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          # Nueva ejecución
          IFS=',' read -r -a extensions <<< "${{ secrets.KAOS_CORE_FILES }}"
          for file in $(git diff --name-only HEAD~1 HEAD); do
            extension="${file##*.}"
            if [[ ! " ${extensions[@]} " =~ " ${extension} " ]]; then
              echo "File $file has an invalid extension: $extension"
            fi
          done
          RNNUMBER=$(echo "${{ github.ref_name }}" | grep -o '[0-9]*')
          gh issue comment $RNNUMBER --body "Se inicia Ka0s ${{ env.KAOS_CODE }} "
          
      - name: Crear JSON
        id: crear_json
        run: |
          # Create JSON structure using proper bash syntax
          echo "$PR_INFO" | jq '.' > ${{ env.KAOS_PATH_RESUME }}${{ env.KAOS_CODE }}.json

          # Stored files implicated in the commit
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > ${{ env.KAOS_PATH_RESUME }}${{ env.KAOS_CODE }}-files-in-commit.txt

      - id: upload-files
        name: Upload Files
        run: |
          echo "Downloading files to the repository..."
          git config --global user.name "${{ secrets.KAOS_BOT_NAME }}"
          git config --global user.email "${{ secrets.KAOS_BOT_EMAIL }}"
          git pull
          echo "Uploading files to the repository..."
          git add ${{ env.KAOS_PATH_RESUME }}*
          git commit -m "[Ka0S] Uploading resume execution files to the repository..."
          git push origin ${{ github.ref }} 

      - id: module
        env:
            modules: ${{ secrets.KAOS_CORE_MODULES }}
            files: ${{ secrets.KAOS_CORE_FILES }}
            GH_TOKEN: ${{ secrets.KAOS_ACTIONS_TOKEN}}
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > files-in-commit.txt
          cat files-in-commit.txt
          # Nuevo proceso de activacion de los modulos
          while IFS= read -r line; do
            # Skip files in core/outputs directory
            if [[ "$line" == core/outputs/* || "$line" == core/results/* ]]; then
              echo "Skipping file in outputs directory: $line"
              continue
            fi
            echo "I Leemos el fichero files-in-commit.txt y extraemos el fichero $line"
            module_failed=0
            extension_failed=0
            file_name=$(basename "$line")
            echo "I-1 Calculamos el nombre del fichero $file_name"
            file_extension="${file_name##*.}"
            echo "I-2 Calculamos la extension del fichero $file_extension"
            file_module="$file_extension""lint.yml"
            echo "I-3 Calculamos el modulo $file_module"
            IFS=',' read -r -a file_array <<< "$files"
            for file in "${file_array[@]}"; do
              echo "II Leemos el array de $file"
              if [[ "$file_extension" == "$file" ]]; then
                echo "III Comprobamos si $file_extension es igual a $file"
                IFS=',' read -r -a module_array <<< "$modules"
                for module in "${module_array[@]}"; do
                  echo "IV Leemos el array $module"
                  if [[ "$file_module" == *"$module"* ]]; then
                    echo "V Comprobamos que el $file_module es igual a $module y ejecutamos el flujo"
                    # Si hemos llegado hasta aquí ejecutamos el módulo
                    # Lanzamos el lint del fichero
                    RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
                    echo "El numero de la issue es: $RNNUMBER"
                    gh workflow run $file_module --ref ${{ github.ref }} -f kaos-origin=${{ github.run_id }} -f kaos-files=$line -f kaos-issue-id=$RNNUMBER -f kaos-user-start=${{ env.KAOS_ACTOR }}
                    module_failed=0
                    extension_failed=0
                    break
                  else
                    # Control de si existe el modulo para esa extension"
                    echo "VI No es igual $file_module a $module y lo indicamos en la variable module_failed=1"
                    module_failed=1
                  fi
                done
                break
              else
                # Control de si existe el modulo para esa extension"
                echo "VII No es igual $file_extension a $file y lo indicamos en la variable extension_failed=1"
                extension_failed=1
              fi  
            done
            if [[ $module_failed == 1 ]]; then
              echo "IX Si el modulo falla ($module_failed) añadimos el comentario a la issue"
              # Si hemos llegado hasta aquí añadimos el mensaje de que la extension esta permitida pero no dispone de modulo activo y aqui finaliza el proceso
              # Añadimos los valores a las variables de la issue
              KAOS_ISSUE_BODY="${{ env.KAOS_MODULE }} ha detectado que la extensión ($file_extension) esta permitida dentro de KAOS_CORE_FILES, pero el módulo asociado ($file_module) no esta activo. Por favor compruebe que exista y esta activo."
              # Añadimos el comentario a la issue
              RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
              gh issue comment $RNNUMBER --body "$KAOS_ISSUE_BODY"
            fi
            if [[ $extension_failed == 1 ]]; then
              echo "X Si extension falla falla ($extension_failed) añadimos el comentario a la issue"
              # Si hemos llegado hasta aquí añadimos el mensaje de que la extension no esta permitida
              # Añadimos los valores a las variables de la issue
              KAOS_ISSUE_BODY="${{ env.KAOS_MODULE }} ha detectado que la extensión ($file_extension) NO esta permitida dentro de KAOS_CORE_FILES. Por favor compruebe que exista y esta activo."
              # Añadimos el comentario a la issue
              RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
              gh issue comment $RNNUMBER --body "$KAOS_ISSUE_BODY"
            fi  
          done < files-in-commit.txt      
  handle-success:
    runs-on:
      group: ka0s
    needs: [job-core]
    if: ${{ success() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-success-execution
        name: handle-success-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          # Si todo ha ido correcto añadimos el contenido del fichero 
          RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          gh issue comment $RNNUMBER --body "El proceso ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado de la ejecución se guardará en MongoDB"
  handle_failure:
    runs-on:
      group: ka0s
    needs: [job-core, handle-success]
    if: ${{ failure() }} 
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-failure-execution
        name: handle-failure-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          echo "Error detected in process"
          RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          gh issue comment $RNNUMBER --body "El proceso no ha finalizado correctamente ${{ env.KAOS_CODE }}."
  end-workflow:
    runs-on:
      group: ka0s
    needs: [job-core, handle-success, handle_failure]
    if: ${{ always() && !contains(github.event.head_commit.message, '[Ka0S] ') }} 
    env:
        GH_TOKEN: ${{ secrets.KAOS_ACTIONS_TOKEN }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: end-process
        name: Finaliza el workflow
        run: |
          echo "End process"
          RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          gh issue comment $RNNUMBER --body "Se finaliza Ka0s ${{ env.KAOS_CODE }}"
          gh workflow run inspector.yml --ref 'main' -f kaos-issue-id=$RNNUMBER -f kaos-workflow-id="${{ env.KAOS_CODE }}" -f kaos-user-start=""
