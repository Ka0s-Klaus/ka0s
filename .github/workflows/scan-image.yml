name: Ka0s Scan Images
on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Nombre de la imagen Docker'
        required: true
        type: string
      dockerfile_path:
        description: 'Ruta al Dockerfile'
        required: true
        type: string
      version:
        description: 'Número de la versión (0.0.0)'
        required: true
        type: string

jobs:
  job-core:
    runs-on:
      group: swarm-runners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ka0score
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build image
        if: success()
        run: |
          # Construimos la imagen
          sudo docker build -t ${{ inputs.image_name }}:${{ inputs.version }} -f ${{ inputs.dockerfile_path }} .
          echo "Se ha generado la imagen ${{ inputs.image_name }}:${{ inputs.version }}...."
          sudo usermod -aG docker runner 
    
      - name: Install Trivy vulnerability scanner
        if: success()
        run: |
          # Instalamos Trivy
          sudo apt-get install wget gnupg
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

          # Ejecutamos el escaneo de la imagen
          sudo trivy image --severity HIGH,CRITICAL --ignore-unfixed --format table ${{ inputs.image_name }}:${{ inputs.version }}

      - name: Tag and Push if scan passes
        if: success()
        run: |
            # Logeamos en docker hub
            sudo docker login -u ka0score -p ${{ secrets.DOCKERHUB_TOKEN }}
            # Añadimos la imagen a la version
            sudo docker tag ${{ inputs.image_name }}:${{ inputs.version }} ka0score/${{ inputs.image_name }}:${{ inputs.version }}
            echo "Se ha generado la version ka0score/${{ inputs.image_name }}:${{ inputs.version }} ...."
            # Añadimos la imagen a latest
            sudo docker tag ${{ inputs.image_name }}:${{ inputs.version }} ka0score/${{ inputs.image_name }}:latest
            echo "Se ha generado la version ka0score/${{ inputs.image_name }}:latest ...."
            # Subimos las imagenes
            sudo docker push ka0score/${{ inputs.image_name }}:${{ inputs.version }}
            echo 
            "Subida la imagen ka0score/${{ inputs.image_name }}:${{ inputs.version }} ...."
            sudo docker push ka0score/${{ inputs.image_name }}:latest
            "Subida la imagen ka0score/${{ inputs.image_name }}:latest ...."


      