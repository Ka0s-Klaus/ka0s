job-core	Set up job	Ôªø2025-03-26T10:48:45.8193716Z Current runner version: '2.323.0'
job-core	Set up job	2025-03-26T10:48:45.8202745Z Runner name: 'ka0s-runner-1'
job-core	Set up job	2025-03-26T10:48:45.8204644Z Machine name: '181b3e34799e'
job-core	Set up job	2025-03-26T10:48:45.8207544Z ##[group]GITHUB_TOKEN Permissions
job-core	Set up job	2025-03-26T10:48:45.8210263Z Contents: read
job-core	Set up job	2025-03-26T10:48:45.8210886Z Metadata: read
job-core	Set up job	2025-03-26T10:48:45.8211444Z Packages: read
job-core	Set up job	2025-03-26T10:48:45.8211999Z ##[endgroup]
job-core	Set up job	2025-03-26T10:48:45.8215177Z Secret source: Actions
job-core	Set up job	2025-03-26T10:48:45.8215971Z Prepare workflow directory
job-core	Set up job	2025-03-26T10:48:45.9131397Z Prepare all required actions
job-core	Set up job	2025-03-26T10:48:45.9188884Z Getting action download info
job-core	Set up job	2025-03-26T10:48:46.7282858Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
job-core	Set up job	2025-03-26T10:48:48.6759788Z Complete job name: job-core
job-core	Checkout code	Ôªø2025-03-26T10:48:48.7550816Z ##[group]Run actions/checkout@v4
job-core	Checkout code	2025-03-26T10:48:48.7552813Z with:
job-core	Checkout code	2025-03-26T10:48:48.7554307Z   fetch-depth: 0
job-core	Checkout code	2025-03-26T10:48:48.7556302Z   token: ***
job-core	Checkout code	2025-03-26T10:48:48.7557330Z   repository: Ka0s-Klaus/ka0s
job-core	Checkout code	2025-03-26T10:48:48.7558620Z   ssh-strict: true
job-core	Checkout code	2025-03-26T10:48:48.7559627Z   ssh-user: git
job-core	Checkout code	2025-03-26T10:48:48.7560679Z   persist-credentials: true
job-core	Checkout code	2025-03-26T10:48:48.7561840Z   clean: true
job-core	Checkout code	2025-03-26T10:48:48.7562879Z   sparse-checkout-cone-mode: true
job-core	Checkout code	2025-03-26T10:48:48.7564677Z   fetch-tags: false
job-core	Checkout code	2025-03-26T10:48:48.7565719Z   show-progress: true
job-core	Checkout code	2025-03-26T10:48:48.7655428Z   lfs: false
job-core	Checkout code	2025-03-26T10:48:48.7656909Z   submodules: false
job-core	Checkout code	2025-03-26T10:48:48.7657993Z   set-safe-directory: true
job-core	Checkout code	2025-03-26T10:48:48.7660119Z env:
job-core	Checkout code	2025-03-26T10:48:48.7661054Z   KAOS_CODE: 14081424992
job-core	Checkout code	2025-03-26T10:48:48.7662158Z   KAOS_EVENT_NAME: push
job-core	Checkout code	2025-03-26T10:48:48.7663210Z   KAOS_ACTION: 
job-core	Checkout code	2025-03-26T10:48:48.7664972Z   KAOS_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
job-core	Checkout code	2025-03-26T10:48:48.7666494Z   KAOS_MODULE: [Ka0S] kaos
job-core	Checkout code	2025-03-26T10:48:48.7667765Z   KAOS_PATH_RESUME: core/results/
job-core	Checkout code	2025-03-26T10:48:48.7669038Z   KAOS_JSON: core/results/event_data
job-core	Checkout code	2025-03-26T10:48:48.7670308Z   KAOS_ACTOR: Yolabn
job-core	Checkout code	2025-03-26T10:48:48.7671341Z   GITHUB_OUTPUT: 
job-core	Checkout code	2025-03-26T10:48:48.7672305Z ##[endgroup]
job-core	Checkout code	2025-03-26T10:48:48.9433255Z Syncing repository: Ka0s-Klaus/ka0s
job-core	Checkout code	2025-03-26T10:48:48.9437413Z ##[group]Getting Git version info
job-core	Checkout code	2025-03-26T10:48:48.9439345Z Working directory is '/actions-runner/_work/ka0s/ka0s'
job-core	Checkout code	2025-03-26T10:48:48.9444237Z [command]/usr/bin/git version
job-core	Checkout code	2025-03-26T10:48:48.9446787Z git version 2.48.1
job-core	Checkout code	2025-03-26T10:48:48.9456383Z ##[endgroup]
job-core	Checkout code	2025-03-26T10:48:48.9478176Z Copying '/home/kaos/.gitconfig' to '/actions-runner/_work/_temp/b180d8a8-f0b8-4e40-ba39-df1e4c0f56e2/.gitconfig'
job-core	Checkout code	2025-03-26T10:48:48.9516502Z Temporarily overriding HOME='/actions-runner/_work/_temp/b180d8a8-f0b8-4e40-ba39-df1e4c0f56e2' before making global git config changes
job-core	Checkout code	2025-03-26T10:48:48.9526419Z Adding repository directory to the temporary git global config as a safe directory
job-core	Checkout code	2025-03-26T10:48:48.9529664Z [command]/usr/bin/git config --global --add safe.directory /actions-runner/_work/ka0s/ka0s
job-core	Checkout code	2025-03-26T10:48:48.9585052Z [command]/usr/bin/git config --local --get remote.origin.url
job-core	Checkout code	2025-03-26T10:48:48.9616184Z https://github.com/Ka0s-Klaus/ka0s
job-core	Checkout code	2025-03-26T10:48:48.9646694Z ##[group]Removing previously created refs, to avoid conflicts
job-core	Checkout code	2025-03-26T10:48:48.9654220Z [command]/usr/bin/git rev-parse --symbolic-full-name --verify --quiet HEAD
job-core	Checkout code	2025-03-26T10:48:48.9687123Z refs/heads/H34-modulo-iac-kaos
job-core	Checkout code	2025-03-26T10:48:48.9704827Z [command]/usr/bin/git checkout --detach
job-core	Checkout code	2025-03-26T10:48:48.9823337Z HEAD is now at acb82d7 Merge remote-tracking branch 'origin' into H34-modulo-iac-kaos
job-core	Checkout code	2025-03-26T10:48:48.9913608Z [command]/usr/bin/git branch --delete --force H34-modulo-iac-kaos
job-core	Checkout code	2025-03-26T10:48:48.9952283Z Deleted branch H34-modulo-iac-kaos (was acb82d7).
job-core	Checkout code	2025-03-26T10:48:49.0054017Z ##[endgroup]
job-core	Checkout code	2025-03-26T10:48:49.0056466Z [command]/usr/bin/git submodule status
job-core	Checkout code	2025-03-26T10:48:49.0536365Z ##[group]Cleaning the repository
job-core	Checkout code	2025-03-26T10:48:49.0539331Z [command]/usr/bin/git clean -ffdx
job-core	Checkout code	2025-03-26T10:48:49.0624746Z [command]/usr/bin/git reset --hard HEAD
job-core	Checkout code	2025-03-26T10:48:49.0767112Z HEAD is now at acb82d7 Merge remote-tracking branch 'origin' into H34-modulo-iac-kaos
job-core	Checkout code	2025-03-26T10:48:49.0777066Z ##[endgroup]
job-core	Checkout code	2025-03-26T10:48:49.0780691Z ##[group]Disabling automatic garbage collection
job-core	Checkout code	2025-03-26T10:48:49.0787169Z [command]/usr/bin/git config --local gc.auto 0
job-core	Checkout code	2025-03-26T10:48:49.0851387Z ##[endgroup]
job-core	Checkout code	2025-03-26T10:48:49.0854813Z ##[group]Setting up auth
job-core	Checkout code	2025-03-26T10:48:49.0858151Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
job-core	Checkout code	2025-03-26T10:48:49.0920394Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
job-core	Checkout code	2025-03-26T10:48:49.1364372Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
job-core	Checkout code	2025-03-26T10:48:49.1414113Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
job-core	Checkout code	2025-03-26T10:48:49.1885088Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
job-core	Checkout code	2025-03-26T10:48:49.1977936Z ##[endgroup]
job-core	Checkout code	2025-03-26T10:48:49.1983689Z ##[group]Fetching the repository
job-core	Checkout code	2025-03-26T10:48:49.1996873Z [command]/usr/bin/git -c protocol.version=2 fetch --prune --no-recurse-submodules origin +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
job-core	Checkout code	2025-03-26T10:48:50.4628579Z From https://github.com/Ka0s-Klaus/ka0s
job-core	Checkout code	2025-03-26T10:48:50.4638197Z    acb82d7..7766866  H34-modulo-iac-kaos -> origin/H34-modulo-iac-kaos
job-core	Checkout code	2025-03-26T10:48:50.4641424Z    5015615..013cd5d  H44-creaci√≥n-m√≥dulo-versionado -> origin/H44-creaci√≥n-m√≥dulo-versionado
job-core	Checkout code	2025-03-26T10:48:50.4645054Z    3550013..3ec4a00  main                -> origin/main
job-core	Checkout code	2025-03-26T10:48:50.4718612Z [command]/usr/bin/git branch --list --remote origin/H44-creaci√≥n-m√≥dulo-versionado
job-core	Checkout code	2025-03-26T10:48:50.4757783Z   origin/H44-creaci√≥n-m√≥dulo-versionado
job-core	Checkout code	2025-03-26T10:48:50.4772048Z [command]/usr/bin/git rev-parse refs/remotes/origin/H44-creaci√≥n-m√≥dulo-versionado
job-core	Checkout code	2025-03-26T10:48:50.4802326Z 013cd5dafb16189522a6ab3636ed785040717680
job-core	Checkout code	2025-03-26T10:48:50.4809894Z ##[endgroup]
job-core	Checkout code	2025-03-26T10:48:50.4811347Z ##[group]Determining the checkout info
job-core	Checkout code	2025-03-26T10:48:50.4812825Z ##[endgroup]
job-core	Checkout code	2025-03-26T10:48:50.4821662Z [command]/usr/bin/git sparse-checkout disable
job-core	Checkout code	2025-03-26T10:48:50.4886210Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
job-core	Checkout code	2025-03-26T10:48:50.4928900Z ##[group]Checking out the ref
job-core	Checkout code	2025-03-26T10:48:50.4936321Z [command]/usr/bin/git checkout --progress --force -B H44-creaci√≥n-m√≥dulo-versionado refs/remotes/origin/H44-creaci√≥n-m√≥dulo-versionado
job-core	Checkout code	2025-03-26T10:48:50.5078590Z Previous HEAD position was acb82d7 Merge remote-tracking branch 'origin' into H34-modulo-iac-kaos
job-core	Checkout code	2025-03-26T10:48:50.5092760Z Switched to a new branch 'H44-creaci√≥n-m√≥dulo-versionado'
job-core	Checkout code	2025-03-26T10:48:50.5098798Z branch 'H44-creaci√≥n-m√≥dulo-versionado' set up to track 'origin/H44-creaci√≥n-m√≥dulo-versionado'.
job-core	Checkout code	2025-03-26T10:48:50.5107201Z ##[endgroup]
job-core	Checkout code	2025-03-26T10:48:50.5162593Z [command]/usr/bin/git log -1 --format=%H
job-core	Checkout code	2025-03-26T10:48:50.5198557Z 013cd5dafb16189522a6ab3636ed785040717680
job-core	Validate file extensions	Ôªø2025-03-26T10:48:50.5505369Z ##[group]Run IFS=' ' read -r -a extensions <<< "***"
job-core	Validate file extensions	2025-03-26T10:48:50.5506312Z [36;1mIFS=' ' read -r -a extensions <<< "***"[0m
job-core	Validate file extensions	2025-03-26T10:48:50.5506875Z [36;1mfor file in $(git diff --name-only HEAD~1 HEAD); do[0m
job-core	Validate file extensions	2025-03-26T10:48:50.5507358Z [36;1m  extension="${file##*.}"[0m
job-core	Validate file extensions	2025-03-26T10:48:50.5507992Z [36;1m  if [[ ! " ${extensions[@]} " =~ " ${extension} " ]]; then[0m
job-core	Validate file extensions	2025-03-26T10:48:50.5508711Z [36;1m    echo "File $file has an invalid extension: $extension"[0m
job-core	Validate file extensions	2025-03-26T10:48:50.5509332Z [36;1m  fi[0m
job-core	Validate file extensions	2025-03-26T10:48:50.5509642Z [36;1mdone[0m
job-core	Validate file extensions	2025-03-26T10:48:50.5510122Z [36;1mRNNUMBER=$(echo "H44-creaci√≥n-m√≥dulo-versionado" | grep -o '[0-9]*')[0m
job-core	Validate file extensions	2025-03-26T10:48:50.5510797Z [36;1mgh issue comment $RNNUMBER --body "Se inicia Ka0s 14081424992 "[0m
job-core	Validate file extensions	2025-03-26T10:48:50.5526356Z shell: /usr/bin/bash -e {0}
job-core	Validate file extensions	2025-03-26T10:48:50.5526804Z env:
job-core	Validate file extensions	2025-03-26T10:48:50.5527247Z   KAOS_CODE: 14081424992
job-core	Validate file extensions	2025-03-26T10:48:50.5527763Z   KAOS_EVENT_NAME: push
job-core	Validate file extensions	2025-03-26T10:48:50.5528603Z   KAOS_ACTION: 
job-core	Validate file extensions	2025-03-26T10:48:50.5529125Z   KAOS_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
job-core	Validate file extensions	2025-03-26T10:48:50.5529620Z   KAOS_MODULE: [Ka0S] kaos
job-core	Validate file extensions	2025-03-26T10:48:50.5530004Z   KAOS_PATH_RESUME: core/results/
job-core	Validate file extensions	2025-03-26T10:48:50.5530417Z   KAOS_JSON: core/results/event_data
job-core	Validate file extensions	2025-03-26T10:48:50.5530826Z   KAOS_ACTOR: Yolabn
job-core	Validate file extensions	2025-03-26T10:48:50.5531179Z   GITHUB_OUTPUT: 
job-core	Validate file extensions	2025-03-26T10:48:50.5531812Z   GH_TOKEN: ***
job-core	Validate file extensions	2025-03-26T10:48:50.5532415Z ##[endgroup]
job-core	Validate file extensions	2025-03-26T10:48:50.5637554Z File core/test/correct-file.json has an invalid extension: json
job-core	Validate file extensions	2025-03-26T10:48:51.8955106Z File core/test/correct-file.md has an invalid extension: md
job-core	Validate file extensions	2025-03-26T10:48:51.8957108Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753988220
job-core	Crear JSON	Ôªø2025-03-26T10:48:51.9083903Z ##[group]Run echo "{}" >> core/results/event_data14081424992.json
job-core	Crear JSON	2025-03-26T10:48:51.9084703Z [36;1mecho "{}" >> core/results/event_data14081424992.json[0m
job-core	Crear JSON	2025-03-26T10:48:51.9085147Z [36;1mcase "push" in[0m
job-core	Crear JSON	2025-03-26T10:48:51.9085460Z [36;1m  "push")[0m
job-core	Crear JSON	2025-03-26T10:48:51.9086639Z [36;1m    echo "{\"event\": \"push\", \"ref\": \"refs/heads/H44-creaci√≥n-m√≥dulo-versionado\", \"sha\": \"013cd5dafb16189522a6ab3636ed785040717680\"}" >> core/results/event_data14081424992.json # Ejemplo: {"event": "push", "ref": "refs/heads/main", "sha": "abc123"}[0m
job-core	Crear JSON	2025-03-26T10:48:51.9088050Z [36;1m    echo "Variable github.action=crear_json" >> core/results/event_data14081424992.json[0m
job-core	Crear JSON	2025-03-26T10:48:51.9088660Z [36;1m    echo "Variable github.event.action="[0m
job-core	Crear JSON	2025-03-26T10:48:51.9089304Z [36;1m    echo "Variable github.event.pusher.name=Yolabn" >> core/results/event_data14081424992.json[0m
job-core	Crear JSON	2025-03-26T10:48:51.9090315Z [36;1m    echo "variable github.event.pusher.email=141480171+Yolabn@users.noreply.github.com" >> core/results/event_data14081424992.json[0m
job-core	Crear JSON	2025-03-26T10:48:51.9091370Z [36;1m    echo "Variable github.event.issue.number=" >> core/results/event_data14081424992.json[0m
job-core	Crear JSON	2025-03-26T10:48:51.9092368Z [36;1m    #Crear un fichero de resumen con todos los datos de los commits asociados, esta informaci√≥n es usada en todo el ciclo de vida del workflow[0m
job-core	Crear JSON	2025-03-26T10:48:51.9093998Z [36;1m    git log 5015615f80ed5b63b79ed3d931c280c39b61c578..013cd5dafb16189522a6ab3636ed785040717680 --pretty=format:'%H%n%an%n%ae%n%ad%n%s' > core/results/commit-summary-$KAOS_CODE_FILES.txt[0m
job-core	Crear JSON	2025-03-26T10:48:51.9095215Z [36;1m    # Crear un fichero con la ruta completa y el nombre ficheros implicados en el commit[0m
job-core	Crear JSON	2025-03-26T10:48:51.9096371Z [36;1m    git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > core/results/files-in-commit-$KAOS_CODE_FILES.txt[0m
job-core	Crear JSON	2025-03-26T10:48:51.9097417Z [36;1m    INVOLVED=core/results/files-in-commit-$KAOS_CODE_FILES.txt[0m
job-core	Crear JSON	2025-03-26T10:48:51.9097996Z [36;1m    #echo "INVOLVED=$INVOLVED" >> $GITHUB_OUTPUT[0m
job-core	Crear JSON	2025-03-26T10:48:51.9098549Z [36;1m    echo "INVOLVED=$INVOLVED" >> core/results/event_data14081424992.json[0m
job-core	Crear JSON	2025-03-26T10:48:51.9099047Z [36;1m    ;;[0m
job-core	Crear JSON	2025-03-26T10:48:51.9099336Z [36;1m  "pull_request")[0m
job-core	Crear JSON	2025-03-26T10:48:51.9100053Z [36;1m    echo "{\"event\": \"pull_request\", \"action\": \"\", \"number\": \"\"}" > event_data.json # Ejemplo: {"event": "pull_request", "action": "opened", "number": "42"}[0m
job-core	Crear JSON	2025-03-26T10:48:51.9100799Z [36;1m    ;;[0m
job-core	Crear JSON	2025-03-26T10:48:51.9101082Z [36;1m  "issues")[0m
job-core	Crear JSON	2025-03-26T10:48:51.9101705Z [36;1m    echo "{\"event\": \"issues\", \"action\": \"\", \"issue\": \"\"}" > event_data.json # Ejemplo: {"event": "issues", "action": "opened", "issue": "99"}[0m
job-core	Crear JSON	2025-03-26T10:48:51.9102387Z [36;1m    ;;[0m
job-core	Crear JSON	2025-03-26T10:48:51.9102688Z [36;1m  "issue_comment")[0m
job-core	Crear JSON	2025-03-26T10:48:51.9103440Z [36;1m    echo "{\"event\": \"issue_comment\", \"action\": \"\", \"comment\": \"\"}" > event_data.json # Ejemplo: {"event": "issue_comment", "action": "created", "comment": "123456"}[0m
job-core	Crear JSON	2025-03-26T10:48:51.9104563Z [36;1m    ;;[0m
job-core	Crear JSON	2025-03-26T10:48:51.9104959Z [36;1m  "create")[0m
job-core	Crear JSON	2025-03-26T10:48:51.9106064Z [36;1m    echo "{\"event\": \"create\", \"ref\": \"refs/heads/H44-creaci√≥n-m√≥dulo-versionado\", \"ref_type\": \"refs/heads/H44-creaci√≥n-m√≥dulo-versionado\"}" > event_data.json # Ejemplo: {"event": "create", "ref": "refs/tags/v1.0", "ref_type": "tag"}[0m
job-core	Crear JSON	2025-03-26T10:48:51.9107177Z [36;1m    ;;[0m
job-core	Crear JSON	2025-03-26T10:48:51.9107457Z [36;1m  "delete")[0m
job-core	Crear JSON	2025-03-26T10:48:51.9109052Z [36;1m    echo "{\"event\": \"delete\", \"ref\": \"refs/heads/H44-creaci√≥n-m√≥dulo-versionado\", \"ref_type\": \"refs/heads/H44-creaci√≥n-m√≥dulo-versionado\"}" > event_data.json # Ejemplo: {"event": "delete", "ref": "refs/heads/feature-branch", "ref_type": "branch"}[0m
job-core	Crear JSON	2025-03-26T10:48:51.9110934Z [36;1m    ;;[0m
job-core	Crear JSON	2025-03-26T10:48:51.9111445Z [36;1m  "release")[0m
job-core	Crear JSON	2025-03-26T10:48:51.9112652Z [36;1m    echo "{\"event\": \"release\", \"action\": \"\", \"release\": \"\"}" > event_data.json # Ejemplo: {"event": "release", "action": "published", "release": "v1.0"}[0m
job-core	Crear JSON	2025-03-26T10:48:51.9114801Z [36;1m    ;;[0m
job-core	Crear JSON	2025-03-26T10:48:51.9115690Z [36;1m  "watch")[0m
job-core	Crear JSON	2025-03-26T10:48:51.9117718Z [36;1m    echo "{\"event\": \"watch\", \"action\": \"\"}" > event_data.json # Ejemplo: {"event": "watch", "action": "started"}[0m
job-core	Crear JSON	2025-03-26T10:48:51.9119109Z [36;1m    ;;[0m
job-core	Crear JSON	2025-03-26T10:48:51.9119668Z [36;1m  "repository_dispatch")[0m
job-core	Crear JSON	2025-03-26T10:48:51.9121104Z [36;1m    echo "{\"event\": \"repository_dispatch\", \"action\": \"\"}" > event_data.json # Ejemplo: {"event": "repository_dispatch", "action": "custom-event"}[0m
job-core	Crear JSON	2025-03-26T10:48:51.9124879Z [36;1m    ;;[0m
job-core	Crear JSON	2025-03-26T10:48:51.9125401Z [36;1m  "workflow_dispatch")[0m
job-core	Crear JSON	2025-03-26T10:48:51.9126003Z [36;1m    echo "{\"event\": \"workflow_dispatch\"}" > event_data.json # Ejemplo: {"event": "workflow_dispatch"}[0m
job-core	Crear JSON	2025-03-26T10:48:51.9126632Z [36;1m    ;;[0m
job-core	Crear JSON	2025-03-26T10:48:51.9126920Z [36;1m  *)[0m
job-core	Crear JSON	2025-03-26T10:48:51.9127370Z [36;1m    echo "{\"event\": \"unknown\"}" > event_data.json # Ejemplo: {"event": "unknown"}[0m
job-core	Crear JSON	2025-03-26T10:48:51.9127896Z [36;1m    ;;[0m
job-core	Crear JSON	2025-03-26T10:48:51.9128182Z [36;1mesac      [0m
job-core	Crear JSON	2025-03-26T10:48:51.9142491Z shell: /usr/bin/bash -e {0}
job-core	Crear JSON	2025-03-26T10:48:51.9143119Z env:
job-core	Crear JSON	2025-03-26T10:48:51.9143544Z   KAOS_CODE: 14081424992
job-core	Crear JSON	2025-03-26T10:48:51.9144570Z   KAOS_EVENT_NAME: push
job-core	Crear JSON	2025-03-26T10:48:51.9145248Z   KAOS_ACTION: 
job-core	Crear JSON	2025-03-26T10:48:51.9145778Z   KAOS_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
job-core	Crear JSON	2025-03-26T10:48:51.9146531Z   KAOS_MODULE: [Ka0S] kaos
job-core	Crear JSON	2025-03-26T10:48:51.9147175Z   KAOS_PATH_RESUME: core/results/
job-core	Crear JSON	2025-03-26T10:48:51.9147911Z   KAOS_JSON: core/results/event_data
job-core	Crear JSON	2025-03-26T10:48:51.9148448Z   KAOS_ACTOR: Yolabn
job-core	Crear JSON	2025-03-26T10:48:51.9148771Z   GITHUB_OUTPUT: 
job-core	Crear JSON	2025-03-26T10:48:51.9149077Z ##[endgroup]
job-core	Crear JSON	2025-03-26T10:48:51.9199010Z Variable github.event.action=
job-core	Set environment variable for ref	Ôªø2025-03-26T10:48:51.9338427Z ##[group]Run echo "GITHUB_REF=refs/heads/H44-creaci√≥n-m√≥dulo-versionado" >> $GITHUB_ENV
job-core	Set environment variable for ref	2025-03-26T10:48:51.9339334Z [36;1mecho "GITHUB_REF=refs/heads/H44-creaci√≥n-m√≥dulo-versionado" >> $GITHUB_ENV[0m
job-core	Set environment variable for ref	2025-03-26T10:48:51.9349075Z shell: /usr/bin/bash -e {0}
job-core	Set environment variable for ref	2025-03-26T10:48:51.9349429Z env:
job-core	Set environment variable for ref	2025-03-26T10:48:51.9349697Z   KAOS_CODE: 14081424992
job-core	Set environment variable for ref	2025-03-26T10:48:51.9350016Z   KAOS_EVENT_NAME: push
job-core	Set environment variable for ref	2025-03-26T10:48:51.9350320Z   KAOS_ACTION: 
job-core	Set environment variable for ref	2025-03-26T10:48:51.9350674Z   KAOS_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
job-core	Set environment variable for ref	2025-03-26T10:48:51.9351106Z   KAOS_MODULE: [Ka0S] kaos
job-core	Set environment variable for ref	2025-03-26T10:48:51.9351437Z   KAOS_PATH_RESUME: core/results/
job-core	Set environment variable for ref	2025-03-26T10:48:51.9351794Z   KAOS_JSON: core/results/event_data
job-core	Set environment variable for ref	2025-03-26T10:48:51.9352146Z   KAOS_ACTOR: Yolabn
job-core	Set environment variable for ref	2025-03-26T10:48:51.9352438Z   GITHUB_OUTPUT: 
job-core	Set environment variable for ref	2025-03-26T10:48:51.9352713Z ##[endgroup]
job-core	Upload Files	Ôªø2025-03-26T10:48:51.9436854Z ##[group]Run echo "Uploading files to the repository..."
job-core	Upload Files	2025-03-26T10:48:51.9437443Z [36;1mecho "Uploading files to the repository..."[0m
job-core	Upload Files	2025-03-26T10:48:51.9438389Z [36;1mgit config --global user.name "***"[0m
job-core	Upload Files	2025-03-26T10:48:51.9438862Z [36;1mgit config --global user.email "***"[0m
job-core	Upload Files	2025-03-26T10:48:51.9439247Z [36;1mgit pull[0m
job-core	Upload Files	2025-03-26T10:48:51.9439563Z [36;1mgit add core/results/event_data*[0m
job-core	Upload Files	2025-03-26T10:48:51.9440100Z [36;1mgit commit -m "[Ka0S] Uploading resume execution files to the repository..."[0m
job-core	Upload Files	2025-03-26T10:48:51.9440751Z [36;1mgit push origin refs/heads/H44-creaci√≥n-m√≥dulo-versionado[0m
job-core	Upload Files	2025-03-26T10:48:51.9441233Z [36;1mgit push origin $GITHUB_REF[0m
job-core	Upload Files	2025-03-26T10:48:51.9451307Z shell: /usr/bin/bash -e {0}
job-core	Upload Files	2025-03-26T10:48:51.9452300Z env:
job-core	Upload Files	2025-03-26T10:48:51.9453079Z   KAOS_CODE: 14081424992
job-core	Upload Files	2025-03-26T10:48:51.9453632Z   KAOS_EVENT_NAME: push
job-core	Upload Files	2025-03-26T10:48:51.9454532Z   KAOS_ACTION: 
job-core	Upload Files	2025-03-26T10:48:51.9454963Z   KAOS_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
job-core	Upload Files	2025-03-26T10:48:51.9455620Z   KAOS_MODULE: [Ka0S] kaos
job-core	Upload Files	2025-03-26T10:48:51.9455968Z   KAOS_PATH_RESUME: core/results/
job-core	Upload Files	2025-03-26T10:48:51.9456412Z   KAOS_JSON: core/results/event_data
job-core	Upload Files	2025-03-26T10:48:51.9456786Z   KAOS_ACTOR: Yolabn
job-core	Upload Files	2025-03-26T10:48:51.9457106Z   GITHUB_OUTPUT: 
job-core	Upload Files	2025-03-26T10:48:51.9457492Z   GITHUB_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
job-core	Upload Files	2025-03-26T10:48:51.9457948Z ##[endgroup]
job-core	Upload Files	2025-03-26T10:48:51.9520560Z Uploading files to the repository...
job-core	Upload Files	2025-03-26T10:48:52.7349825Z Already up to date.
job-core	Upload Files	2025-03-26T10:48:52.7991031Z [H44-creaci√≥n-m√≥dulo-versionado a9104d9] [Ka0S] Uploading resume execution files to the repository...
job-core	Upload Files	2025-03-26T10:48:52.7993161Z  1 file changed, 7 insertions(+)
job-core	Upload Files	2025-03-26T10:48:52.7994626Z  create mode 100644 core/results/event_data14081424992.json
job-core	Upload Files	2025-03-26T10:48:53.8741728Z To https://github.com/Ka0s-Klaus/ka0s
job-core	Upload Files	2025-03-26T10:48:53.8747735Z    013cd5d..a9104d9  H44-creaci√≥n-m√≥dulo-versionado -> H44-creaci√≥n-m√≥dulo-versionado
job-core	Upload Files	2025-03-26T10:48:54.4233586Z Everything up-to-date
job-core	Ver JSON	Ôªø2025-03-26T10:48:54.4442443Z ##[group]Run cat core/results/event_data14081424992.json
job-core	Ver JSON	2025-03-26T10:48:54.4443913Z [36;1mcat core/results/event_data14081424992.json[0m
job-core	Ver JSON	2025-03-26T10:48:54.4463271Z shell: /usr/bin/bash -e {0}
job-core	Ver JSON	2025-03-26T10:48:54.4464364Z env:
job-core	Ver JSON	2025-03-26T10:48:54.4464898Z   KAOS_CODE: 14081424992
job-core	Ver JSON	2025-03-26T10:48:54.4465557Z   KAOS_EVENT_NAME: push
job-core	Ver JSON	2025-03-26T10:48:54.4466281Z   KAOS_ACTION: 
job-core	Ver JSON	2025-03-26T10:48:54.4466978Z   KAOS_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
job-core	Ver JSON	2025-03-26T10:48:54.4467944Z   KAOS_MODULE: [Ka0S] kaos
job-core	Ver JSON	2025-03-26T10:48:54.4468934Z   KAOS_PATH_RESUME: core/results/
job-core	Ver JSON	2025-03-26T10:48:54.4469744Z   KAOS_JSON: core/results/event_data
job-core	Ver JSON	2025-03-26T10:48:54.4470540Z   KAOS_ACTOR: Yolabn
job-core	Ver JSON	2025-03-26T10:48:54.4471140Z   GITHUB_OUTPUT: 
job-core	Ver JSON	2025-03-26T10:48:54.4472049Z   GITHUB_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
job-core	Ver JSON	2025-03-26T10:48:54.4472913Z ##[endgroup]
job-core	Ver JSON	2025-03-26T10:48:54.4541798Z {}
job-core	Ver JSON	2025-03-26T10:48:54.4543421Z {"event": "push", "ref": "refs/heads/H44-creaci√≥n-m√≥dulo-versionado", "sha": "013cd5dafb16189522a6ab3636ed785040717680"}
job-core	Ver JSON	2025-03-26T10:48:54.4545349Z Variable github.action=crear_json
job-core	Ver JSON	2025-03-26T10:48:54.4546040Z Variable github.event.pusher.name=Yolabn
job-core	Ver JSON	2025-03-26T10:48:54.4547274Z variable github.event.pusher.email=141480171+Yolabn@users.noreply.github.com
job-core	Ver JSON	2025-03-26T10:48:54.4548402Z Variable github.event.issue.number=
job-core	Ver JSON	2025-03-26T10:48:54.4549190Z INVOLVED=core/results/files-in-commit-.txt
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	Ôªø2025-03-26T10:48:54.4646050Z ##[group]Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4647473Z [36;1mgit diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4648275Z [36;1mcat files-in-commit.txt[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4648699Z [36;1m# Nuevo proceso de activacion de los modulos[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4649140Z [36;1mwhile IFS= read -r line; do[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4649679Z [36;1m  echo "I Leemos el fichero files-in-commit.txt y extraemos el fichero $line"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4650562Z [36;1m  module_failed=0[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4650901Z [36;1m  extension_failed=0[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4651266Z [36;1m  file_name=$(basename "$line")[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4651720Z [36;1m  echo "I-1 Calculamos el nombre del fichero $file_name"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4652592Z [36;1m  file_extension="${file_name##*.}"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4661662Z [36;1m  echo "I-2 Calculamos la extension del fichero $file_extension"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4662217Z [36;1m  file_module="$file_extension""lint.yml"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4662663Z [36;1m  echo "I-3 Calculamos el modulo $file_module"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4663115Z [36;1m  IFS=',' read -r -a file_array <<< "$files"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4663525Z [36;1m  for file in "${file_array[@]}"; do[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4664228Z [36;1m    echo "II Leemos el array de $file"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4664803Z [36;1m    if [[ "$file_extension" == "$file" ]]; then[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4665291Z [36;1m      echo "III Comprobamos si $file_extension es igual a $file"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4665827Z [36;1m      IFS=',' read -r -a module_array <<< "$modules"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4666266Z [36;1m      for module in "${module_array[@]}"; do[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4666676Z [36;1m        echo "IV Leemos el array $module"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4667090Z [36;1m        if [[ "$file_module" == *"$module"* ]]; then[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4667666Z [36;1m          echo "V Comprobamos que el $file_module es igual a $module y ejecutamos el flujo"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4668282Z [36;1m          # Si hemos llegado hasta aqu√≠ ejecutamos el m√≥dulo[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4668732Z [36;1m          # Lanzamos el lint del fichero[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4669344Z [36;1m          RNNUMBER=$(echo "refs/heads/H44-creaci√≥n-m√≥dulo-versionado" | grep -o '[0-9]*')[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4669952Z [36;1m          echo "El numero de la issue es: $RNNUMBER"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4670940Z [36;1m          gh workflow run $file_module --ref refs/heads/H44-creaci√≥n-m√≥dulo-versionado -f kaos-origin=14081424992 -f kaos-files=$line -f kaos-issue-id=$RNNUMBER -f kaos-user-start=Yolabn[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4671884Z [36;1m          module_failed=0[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4672228Z [36;1m          extension_failed=0[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4672568Z [36;1m          break[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4672861Z [36;1m        else[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4673248Z [36;1m          # Control de si existe el modulo para esa extension"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4674377Z [36;1m          echo "VI No es igual $file_module a $module y lo indicamos en la variable module_failed=1"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4674973Z [36;1m          module_failed=1[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4675433Z [36;1m        fi[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4675702Z [36;1m      done[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4675975Z [36;1m      break[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4676256Z [36;1m    else[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4676607Z [36;1m      # Control de si existe el modulo para esa extension"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4677265Z [36;1m      echo "VII No es igual $file_extension a $file y lo indicamos en la variable extension_failed=1"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4677845Z [36;1m      extension_failed=1[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4678166Z [36;1m    fi  [0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4678430Z [36;1m  done[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4678941Z [36;1m  if [[ $module_failed == 1 ]]; then[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4679664Z [36;1m    echo "IX Si el modulo falla ($module_failed) a√±adimos el comentario a la issue"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4681220Z [36;1m    # Si hemos llegado hasta aqu√≠ a√±adimos el mensaje de que la extension esta permitida pero no dispone de modulo activo y aqui finaliza el proceso[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4682055Z [36;1m    # A√±adimos los valores a las variables de la issue[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4683163Z [36;1m    KAOS_ISSUE_BODY="[Ka0S] kaos ha detectado que la extensi√≥n ($file_extension) esta permitida dentro de KAOS_CORE_FILES, pero el m√≥dulo asociado ($file_module) no esta activo. Por favor compruebe que exista y esta activo."[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4684900Z [36;1m    # A√±adimos el comentario a la issue[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4685470Z [36;1m    RNNUMBER=$(echo "refs/heads/H44-creaci√≥n-m√≥dulo-versionado" | grep -o '[0-9]*')[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4686097Z [36;1m    gh issue comment $RNNUMBER --body "$KAOS_ISSUE_BODY"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4686524Z [36;1m  fi[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4686823Z [36;1m  if [[ $extension_failed == 1 ]]; then[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4687423Z [36;1m    echo "X Si extension falla falla ($extension_failed) a√±adimos el comentario a la issue"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4688185Z [36;1m    # Si hemos llegado hasta aqu√≠ a√±adimos el mensaje de que la extension no esta permitida[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4688807Z [36;1m    # A√±adimos los valores a las variables de la issue[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4689723Z [36;1m    KAOS_ISSUE_BODY="[Ka0S] kaos ha detectado que la extensi√≥n ($file_extension) NO esta permitida dentro de KAOS_CORE_FILES. Por favor compruebe que exista y esta activo."[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4690625Z [36;1m    # A√±adimos el comentario a la issue[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4691190Z [36;1m    RNNUMBER=$(echo "refs/heads/H44-creaci√≥n-m√≥dulo-versionado" | grep -o '[0-9]*')[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4691811Z [36;1m    gh issue comment $RNNUMBER --body "$KAOS_ISSUE_BODY"[0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4692230Z [36;1m  fi  [0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4692528Z [36;1mdone < files-in-commit.txt      [0m
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4702208Z shell: /usr/bin/bash -e {0}
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4702530Z env:
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4702782Z   KAOS_CODE: 14081424992
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4703085Z   KAOS_EVENT_NAME: push
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4703388Z   KAOS_ACTION: 
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4703722Z   KAOS_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4704561Z   KAOS_MODULE: [Ka0S] kaos
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4704881Z   KAOS_PATH_RESUME: core/results/
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4712000Z   KAOS_JSON: core/results/event_data
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4712357Z   KAOS_ACTOR: Yolabn
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4712644Z   GITHUB_OUTPUT: 
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4713017Z   GITHUB_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4714185Z   modules: ***
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4714643Z   files: ***
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4715196Z   GH_TOKEN: ***
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4715461Z ##[endgroup]
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4818163Z .github/workflows/inspector.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4819311Z .github/workflows/mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4820028Z .github/workflows/version.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4820712Z .github/workflows/yamllint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4822004Z core/outputs/e/14078154270.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4822734Z core/outputs/e/14078154270.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4823664Z core/outputs/e/14079442629.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4825121Z core/outputs/e/14079442629.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4826221Z core/outputs/e/14079768478.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4827061Z core/outputs/e/14079768478.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4828280Z core/outputs/e/14079840901.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4829148Z core/outputs/e/14079840901.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4829501Z core/outputs/e/14079847324.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4829987Z core/outputs/e/14079847324.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4830343Z core/outputs/e/14079847688.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4830702Z core/outputs/e/14079847688.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4831053Z core/outputs/e/14080943654.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4831426Z core/outputs/e/14080943654.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4831838Z core/test/correct-file.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4832223Z core/test/correct-file.md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4833368Z I Leemos el fichero files-in-commit.txt y extraemos el fichero .github/workflows/inspector.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4851387Z I-1 Calculamos el nombre del fichero inspector.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4852429Z I-2 Calculamos la extension del fichero yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4853227Z I-3 Calculamos el modulo ymllint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4854086Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4855278Z VII No es igual yml a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4856766Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4857813Z VII No es igual yml a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4858904Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4859368Z VII No es igual yml a json y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4859872Z II Leemos el array de py
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4860316Z VII No es igual yml a py y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:54.4861128Z X Si extension falla falla (1) a√±adimos el comentario a la issue
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7872186Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753988380
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7917812Z I Leemos el fichero files-in-commit.txt y extraemos el fichero .github/workflows/mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7956464Z I-1 Calculamos el nombre del fichero mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7958711Z I-2 Calculamos la extension del fichero yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7960417Z I-3 Calculamos el modulo ymllint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7961865Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7963275Z VII No es igual yml a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7965806Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7972259Z VII No es igual yml a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7975900Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7978762Z VII No es igual yml a json y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7981524Z II Leemos el array de py
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7989213Z VII No es igual yml a py y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:55.7994409Z X Si extension falla falla (1) a√±adimos el comentario a la issue
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2021913Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753988439
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2088187Z I Leemos el fichero files-in-commit.txt y extraemos el fichero .github/workflows/version.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2147480Z I-1 Calculamos el nombre del fichero version.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2150792Z I-2 Calculamos la extension del fichero yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2162609Z I-3 Calculamos el modulo ymllint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2168056Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2172268Z VII No es igual yml a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2176626Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2178858Z VII No es igual yml a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2180484Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2181982Z VII No es igual yml a json y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2183590Z II Leemos el array de py
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2188336Z VII No es igual yml a py y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:57.2195503Z X Si extension falla falla (1) a√±adimos el comentario a la issue
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5523263Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753988485
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5586049Z I Leemos el fichero files-in-commit.txt y extraemos el fichero .github/workflows/yamllint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5640899Z I-1 Calculamos el nombre del fichero yamllint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5644674Z I-2 Calculamos la extension del fichero yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5647765Z I-3 Calculamos el modulo ymllint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5650217Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5653196Z VII No es igual yml a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5663264Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5668871Z VII No es igual yml a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5672212Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5675662Z VII No es igual yml a json y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5679789Z II Leemos el array de py
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5682297Z VII No es igual yml a py y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:58.5687131Z X Si extension falla falla (1) a√±adimos el comentario a la issue
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.8860081Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753988538
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.8917691Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14078154270.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.8998269Z I-1 Calculamos el nombre del fichero 14078154270.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9000370Z I-2 Calculamos la extension del fichero json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9002784Z I-3 Calculamos el modulo jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9005088Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9007690Z VII No es igual json a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9010124Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9012644Z VII No es igual json a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9015282Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9017476Z III Comprobamos si json es igual a json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9019192Z IV Leemos el array yamlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9022233Z VI No es igual jsonlint.yml a yamlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9026108Z IV Leemos el array mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9029378Z VI No es igual jsonlint.yml a mdlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9032749Z IV Leemos el array jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9036988Z V Comprobamos que el jsonlint.yml es igual a jsonlint.yml y ejecutamos el flujo
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:48:59.9091546Z El numero de la issue es: 44
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8501178Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14078154270.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8527946Z I-1 Calculamos el nombre del fichero 14078154270.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8529426Z I-2 Calculamos la extension del fichero log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8530728Z I-3 Calculamos el modulo loglint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8531883Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8535495Z VII No es igual log a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8537039Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8537951Z VII No es igual log a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8539010Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8539980Z VII No es igual log a json y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8541063Z II Leemos el array de py
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8542056Z VII No es igual log a py y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:00.8543724Z X Si extension falla falla (1) a√±adimos el comentario a la issue
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4459738Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753988628
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4588712Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14079442629.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4699235Z I-1 Calculamos el nombre del fichero 14079442629.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4707822Z I-2 Calculamos la extension del fichero json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4718455Z I-3 Calculamos el modulo jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4756374Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4762524Z VII No es igual json a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4766617Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4770523Z VII No es igual json a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4808869Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4810741Z III Comprobamos si json es igual a json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4812653Z IV Leemos el array yamlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4815558Z VI No es igual jsonlint.yml a yamlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4819787Z IV Leemos el array mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4827953Z VI No es igual jsonlint.yml a mdlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4831698Z IV Leemos el array jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4835287Z V Comprobamos que el jsonlint.yml es igual a jsonlint.yml y ejecutamos el flujo
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:02.4856590Z El numero de la issue es: 44
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6745702Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14079442629.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6771815Z I-1 Calculamos el nombre del fichero 14079442629.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6774467Z I-2 Calculamos la extension del fichero log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6775815Z I-3 Calculamos el modulo loglint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6777158Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6778708Z VII No es igual log a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6780377Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6781965Z VII No es igual log a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6783905Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6786108Z VII No es igual log a json y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6787855Z II Leemos el array de py
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6789165Z VII No es igual log a py y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:03.6794735Z X Si extension falla falla (1) a√±adimos el comentario a la issue
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5164240Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753988784
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5268327Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14079768478.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5353436Z I-1 Calculamos el nombre del fichero 14079768478.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5358165Z I-2 Calculamos la extension del fichero json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5361637Z I-3 Calculamos el modulo jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5366253Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5376966Z VII No es igual json a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5383534Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5386844Z VII No es igual json a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5388924Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5390351Z III Comprobamos si json es igual a json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5391934Z IV Leemos el array yamlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5394896Z VI No es igual jsonlint.yml a yamlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5397286Z IV Leemos el array mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5399408Z VI No es igual jsonlint.yml a mdlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5401750Z IV Leemos el array jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5404178Z V Comprobamos que el jsonlint.yml es igual a jsonlint.yml y ejecutamos el flujo
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:05.5508960Z El numero de la issue es: 44
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5490708Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14079768478.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5567970Z I-1 Calculamos el nombre del fichero 14079768478.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5572602Z I-2 Calculamos la extension del fichero log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5576588Z I-3 Calculamos el modulo loglint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5579962Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5584469Z VII No es igual log a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5587698Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5589564Z VII No es igual log a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5591606Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5593517Z VII No es igual log a json y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5595906Z II Leemos el array de py
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5597691Z VII No es igual log a py y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:06.5601725Z X Si extension falla falla (1) a√±adimos el comentario a la issue
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8702906Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753988881
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8764319Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14079840901.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8809585Z I-1 Calculamos el nombre del fichero 14079840901.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8811883Z I-2 Calculamos la extension del fichero json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8834223Z I-3 Calculamos el modulo jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8836213Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8838675Z VII No es igual json a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8841101Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8844140Z VII No es igual json a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8845070Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8845704Z III Comprobamos si json es igual a json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8846452Z IV Leemos el array yamlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8847777Z VI No es igual jsonlint.yml a yamlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8848830Z IV Leemos el array mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8849727Z VI No es igual jsonlint.yml a mdlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8850715Z IV Leemos el array jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8852314Z V Comprobamos que el jsonlint.yml es igual a jsonlint.yml y ejecutamos el flujo
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:07.8880037Z El numero de la issue es: 44
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0067464Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14079840901.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0149168Z I-1 Calculamos el nombre del fichero 14079840901.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0160209Z I-2 Calculamos la extension del fichero log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0163522Z I-3 Calculamos el modulo loglint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0166842Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0174973Z VII No es igual log a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0178807Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0183386Z VII No es igual log a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0188124Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0193164Z VII No es igual log a json y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0197468Z II Leemos el array de py
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0201470Z VII No es igual log a py y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:09.0210710Z X Si extension falla falla (1) a√±adimos el comentario a la issue
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6365106Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753988979
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6441569Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14079847324.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6521912Z I-1 Calculamos el nombre del fichero 14079847324.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6528409Z I-2 Calculamos la extension del fichero json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6532773Z I-3 Calculamos el modulo jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6536310Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6539756Z VII No es igual json a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6545047Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6550463Z VII No es igual json a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6557112Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6560263Z III Comprobamos si json es igual a json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6565213Z IV Leemos el array yamlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6571089Z VI No es igual jsonlint.yml a yamlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6577044Z IV Leemos el array mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6578961Z VI No es igual jsonlint.yml a mdlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6581024Z IV Leemos el array jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6584132Z V Comprobamos que el jsonlint.yml es igual a jsonlint.yml y ejecutamos el flujo
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:10.6636487Z El numero de la issue es: 44
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8701175Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14079847324.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8749411Z I-1 Calculamos el nombre del fichero 14079847324.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8752777Z I-2 Calculamos la extension del fichero log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8755694Z I-3 Calculamos el modulo loglint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8758199Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8761498Z VII No es igual log a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8765405Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8768921Z VII No es igual log a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8771520Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8773615Z VII No es igual log a json y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8778442Z II Leemos el array de py
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8815608Z VII No es igual log a py y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:11.8819482Z X Si extension falla falla (1) a√±adimos el comentario a la issue
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.0929177Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753989094
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1012791Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14079847688.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1077890Z I-1 Calculamos el nombre del fichero 14079847688.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1079569Z I-2 Calculamos la extension del fichero json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1080897Z I-3 Calculamos el modulo jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1084329Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1105306Z VII No es igual json a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1109435Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1113262Z VII No es igual json a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1118034Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1120904Z III Comprobamos si json es igual a json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1124624Z IV Leemos el array yamlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1134060Z VI No es igual jsonlint.yml a yamlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1140043Z IV Leemos el array mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1146028Z VI No es igual jsonlint.yml a mdlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1150863Z IV Leemos el array jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1157652Z V Comprobamos que el jsonlint.yml es igual a jsonlint.yml y ejecutamos el flujo
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:13.1207751Z El numero de la issue es: 44
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0182165Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14079847688.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0217672Z I-1 Calculamos el nombre del fichero 14079847688.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0219621Z I-2 Calculamos la extension del fichero log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0221469Z I-3 Calculamos el modulo loglint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0222957Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0225555Z VII No es igual log a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0228624Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0230440Z VII No es igual log a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0231516Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0232436Z VII No es igual log a json y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0233482Z II Leemos el array de py
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0234667Z VII No es igual log a py y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:14.0236230Z X Si extension falla falla (1) a√±adimos el comentario a la issue
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5510148Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753989179
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5618521Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14080943654.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5703277Z I-1 Calculamos el nombre del fichero 14080943654.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5718846Z I-2 Calculamos la extension del fichero json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5724621Z I-3 Calculamos el modulo jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5728549Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5733276Z VII No es igual json a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5740518Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5745569Z VII No es igual json a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5750923Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5755237Z III Comprobamos si json es igual a json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5756856Z IV Leemos el array yamlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5758999Z VI No es igual jsonlint.yml a yamlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5761648Z IV Leemos el array mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5767451Z VI No es igual jsonlint.yml a mdlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5775809Z IV Leemos el array jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5784116Z V Comprobamos que el jsonlint.yml es igual a jsonlint.yml y ejecutamos el flujo
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:15.5845028Z El numero de la issue es: 44
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5764806Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/outputs/e/14080943654.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5784270Z I-1 Calculamos el nombre del fichero 14080943654.log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5785604Z I-2 Calculamos la extension del fichero log
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5787678Z I-3 Calculamos el modulo loglint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5788753Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5792162Z VII No es igual log a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5793108Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5801017Z VII No es igual log a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5802473Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5803991Z VII No es igual log a json y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5811577Z II Leemos el array de py
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5813131Z VII No es igual log a py y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:16.5818415Z X Si extension falla falla (1) a√±adimos el comentario a la issue
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9055214Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753989290
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9165386Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/test/correct-file.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9206467Z I-1 Calculamos el nombre del fichero correct-file.json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9210964Z I-2 Calculamos la extension del fichero json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9214380Z I-3 Calculamos el modulo jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9217216Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9220355Z VII No es igual json a md y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9224482Z II Leemos el array de yaml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9226507Z VII No es igual json a yaml y lo indicamos en la variable extension_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9228209Z II Leemos el array de json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9229325Z III Comprobamos si json es igual a json
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9230565Z IV Leemos el array yamlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9232229Z VI No es igual jsonlint.yml a yamlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9234592Z IV Leemos el array mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9236319Z VI No es igual jsonlint.yml a mdlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9240057Z IV Leemos el array jsonlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9241732Z V Comprobamos que el jsonlint.yml es igual a jsonlint.yml y ejecutamos el flujo
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:17.9327973Z El numero de la issue es: 44
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:19.1435553Z I Leemos el fichero files-in-commit.txt y extraemos el fichero core/test/correct-file.md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:19.1526834Z I-1 Calculamos el nombre del fichero correct-file.md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:19.1530396Z I-2 Calculamos la extension del fichero md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:19.1535343Z I-3 Calculamos el modulo mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:19.1539554Z II Leemos el array de md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:19.1542256Z III Comprobamos si md es igual a md
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:19.1546550Z IV Leemos el array yamlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:19.1561060Z VI No es igual mdlint.yml a yamlint.yml y lo indicamos en la variable module_failed=1
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:19.1568574Z IV Leemos el array mdlint.yml
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:19.1577849Z V Comprobamos que el mdlint.yml es igual a mdlint.yml y ejecutamos el flujo
job-core	Run git diff --name-only 5015615f80ed5b63b79ed3d931c280c39b61c578 013cd5dafb16189522a6ab3636ed785040717680 > files-in-commit.txt	2025-03-26T10:49:19.1702287Z El numero de la issue es: 44
job-core	Post Checkout code	Ôªø2025-03-26T10:49:20.0786513Z Post job cleanup.
job-core	Post Checkout code	2025-03-26T10:49:20.2274867Z [command]/usr/bin/git version
job-core	Post Checkout code	2025-03-26T10:49:20.2346209Z git version 2.48.1
job-core	Post Checkout code	2025-03-26T10:49:20.2404749Z Copying '/home/kaos/.gitconfig' to '/actions-runner/_work/_temp/78022404-49ee-4c2c-b46a-187527bbf37c/.gitconfig'
job-core	Post Checkout code	2025-03-26T10:49:20.2424870Z Temporarily overriding HOME='/actions-runner/_work/_temp/78022404-49ee-4c2c-b46a-187527bbf37c' before making global git config changes
job-core	Post Checkout code	2025-03-26T10:49:20.2427545Z Adding repository directory to the temporary git global config as a safe directory
job-core	Post Checkout code	2025-03-26T10:49:20.2434599Z [command]/usr/bin/git config --global --add safe.directory /actions-runner/_work/ka0s/ka0s
job-core	Post Checkout code	2025-03-26T10:49:20.2521998Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
job-core	Post Checkout code	2025-03-26T10:49:20.2589969Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
job-core	Post Checkout code	2025-03-26T10:49:20.3072598Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
job-core	Post Checkout code	2025-03-26T10:49:20.3113706Z http.https://github.com/.extraheader
job-core	Post Checkout code	2025-03-26T10:49:20.3143278Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
job-core	Post Checkout code	2025-03-26T10:49:20.3204105Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
job-core	Complete job	Ôªø2025-03-26T10:49:20.3780803Z Cleaning up orphan processes
handle-success	Set up job	Ôªø2025-03-26T10:49:29.0795700Z Current runner version: '2.323.0'
handle-success	Set up job	2025-03-26T10:49:29.0804666Z Runner name: 'ka0s-runner-1'
handle-success	Set up job	2025-03-26T10:49:29.0805776Z Machine name: '181b3e34799e'
handle-success	Set up job	2025-03-26T10:49:29.0808565Z ##[group]GITHUB_TOKEN Permissions
handle-success	Set up job	2025-03-26T10:49:29.0811415Z Contents: read
handle-success	Set up job	2025-03-26T10:49:29.0811997Z Metadata: read
handle-success	Set up job	2025-03-26T10:49:29.0812534Z Packages: read
handle-success	Set up job	2025-03-26T10:49:29.0813069Z ##[endgroup]
handle-success	Set up job	2025-03-26T10:49:29.0816016Z Secret source: Actions
handle-success	Set up job	2025-03-26T10:49:29.0816741Z Prepare workflow directory
handle-success	Set up job	2025-03-26T10:49:29.1732469Z Prepare all required actions
handle-success	Set up job	2025-03-26T10:49:29.1785488Z Getting action download info
handle-success	Set up job	2025-03-26T10:49:29.9455646Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
handle-success	Set up job	2025-03-26T10:49:31.6934948Z Complete job name: handle-success
handle-success	Checkout code	Ôªø2025-03-26T10:49:31.7852243Z ##[group]Run actions/checkout@v4
handle-success	Checkout code	2025-03-26T10:49:31.7854843Z with:
handle-success	Checkout code	2025-03-26T10:49:31.7855840Z   fetch-depth: 0
handle-success	Checkout code	2025-03-26T10:49:31.7857435Z   token: ***
handle-success	Checkout code	2025-03-26T10:49:31.7858812Z   repository: Ka0s-Klaus/ka0s
handle-success	Checkout code	2025-03-26T10:49:31.7860141Z   ssh-strict: true
handle-success	Checkout code	2025-03-26T10:49:31.7861146Z   ssh-user: git
handle-success	Checkout code	2025-03-26T10:49:31.7862179Z   persist-credentials: true
handle-success	Checkout code	2025-03-26T10:49:31.7863322Z   clean: true
handle-success	Checkout code	2025-03-26T10:49:31.7864892Z   sparse-checkout-cone-mode: true
handle-success	Checkout code	2025-03-26T10:49:31.7866162Z   fetch-tags: false
handle-success	Checkout code	2025-03-26T10:49:31.7867216Z   show-progress: true
handle-success	Checkout code	2025-03-26T10:49:31.7868261Z   lfs: false
handle-success	Checkout code	2025-03-26T10:49:31.7869223Z   submodules: false
handle-success	Checkout code	2025-03-26T10:49:31.7870271Z   set-safe-directory: true
handle-success	Checkout code	2025-03-26T10:49:31.7871788Z env:
handle-success	Checkout code	2025-03-26T10:49:31.7872721Z   KAOS_CODE: 14081424992
handle-success	Checkout code	2025-03-26T10:49:31.7874136Z   KAOS_EVENT_NAME: push
handle-success	Checkout code	2025-03-26T10:49:31.7875462Z   KAOS_ACTION: 
handle-success	Checkout code	2025-03-26T10:49:31.7876680Z   KAOS_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
handle-success	Checkout code	2025-03-26T10:49:31.7878202Z   KAOS_MODULE: [Ka0S] kaos
handle-success	Checkout code	2025-03-26T10:49:31.7879451Z   KAOS_PATH_RESUME: core/results/
handle-success	Checkout code	2025-03-26T10:49:31.7880755Z   KAOS_JSON: core/results/event_data
handle-success	Checkout code	2025-03-26T10:49:31.7882038Z   KAOS_ACTOR: Yolabn
handle-success	Checkout code	2025-03-26T10:49:31.7883071Z ##[endgroup]
handle-success	Checkout code	2025-03-26T10:49:31.9757691Z Syncing repository: Ka0s-Klaus/ka0s
handle-success	Checkout code	2025-03-26T10:49:31.9762810Z ##[group]Getting Git version info
handle-success	Checkout code	2025-03-26T10:49:31.9766237Z Working directory is '/actions-runner/_work/ka0s/ka0s'
handle-success	Checkout code	2025-03-26T10:49:31.9770518Z [command]/usr/bin/git version
handle-success	Checkout code	2025-03-26T10:49:31.9772549Z git version 2.48.1
handle-success	Checkout code	2025-03-26T10:49:31.9787723Z ##[endgroup]
handle-success	Checkout code	2025-03-26T10:49:31.9806787Z Copying '/home/kaos/.gitconfig' to '/actions-runner/_work/_temp/8f50515c-92ff-4989-916e-f3f885e8f1e4/.gitconfig'
handle-success	Checkout code	2025-03-26T10:49:31.9827257Z Temporarily overriding HOME='/actions-runner/_work/_temp/8f50515c-92ff-4989-916e-f3f885e8f1e4' before making global git config changes
handle-success	Checkout code	2025-03-26T10:49:31.9832519Z Adding repository directory to the temporary git global config as a safe directory
handle-success	Checkout code	2025-03-26T10:49:31.9846088Z [command]/usr/bin/git config --global --add safe.directory /actions-runner/_work/ka0s/ka0s
handle-success	Checkout code	2025-03-26T10:49:31.9902898Z [command]/usr/bin/git config --local --get remote.origin.url
handle-success	Checkout code	2025-03-26T10:49:31.9934661Z https://github.com/Ka0s-Klaus/ka0s
handle-success	Checkout code	2025-03-26T10:49:31.9967853Z ##[group]Removing previously created refs, to avoid conflicts
handle-success	Checkout code	2025-03-26T10:49:31.9975231Z [command]/usr/bin/git rev-parse --symbolic-full-name --verify --quiet HEAD
handle-success	Checkout code	2025-03-26T10:49:32.0017286Z refs/heads/H44-creaci√≥n-m√≥dulo-versionado
handle-success	Checkout code	2025-03-26T10:49:32.0032988Z [command]/usr/bin/git checkout --detach
handle-success	Checkout code	2025-03-26T10:49:32.0145941Z HEAD is now at a9104d9 [Ka0S] Uploading resume execution files to the repository...
handle-success	Checkout code	2025-03-26T10:49:32.0220701Z [command]/usr/bin/git branch --delete --force H44-creaci√≥n-m√≥dulo-versionado
handle-success	Checkout code	2025-03-26T10:49:32.0270900Z Deleted branch H44-creaci√≥n-m√≥dulo-versionado (was a9104d9).
handle-success	Checkout code	2025-03-26T10:49:32.0377737Z ##[endgroup]
handle-success	Checkout code	2025-03-26T10:49:32.0379962Z [command]/usr/bin/git submodule status
handle-success	Checkout code	2025-03-26T10:49:32.0827530Z ##[group]Cleaning the repository
handle-success	Checkout code	2025-03-26T10:49:32.0835350Z [command]/usr/bin/git clean -ffdx
handle-success	Checkout code	2025-03-26T10:49:32.0886979Z Removing core/results/commit-summary-.txt
handle-success	Checkout code	2025-03-26T10:49:32.0891825Z Removing core/results/files-in-commit-.txt
handle-success	Checkout code	2025-03-26T10:49:32.0895004Z Removing files-in-commit.txt
handle-success	Checkout code	2025-03-26T10:49:32.0911547Z [command]/usr/bin/git reset --hard HEAD
handle-success	Checkout code	2025-03-26T10:49:32.1039628Z HEAD is now at a9104d9 [Ka0S] Uploading resume execution files to the repository...
handle-success	Checkout code	2025-03-26T10:49:32.1051678Z ##[endgroup]
handle-success	Checkout code	2025-03-26T10:49:32.1054826Z ##[group]Disabling automatic garbage collection
handle-success	Checkout code	2025-03-26T10:49:32.1078352Z [command]/usr/bin/git config --local gc.auto 0
handle-success	Checkout code	2025-03-26T10:49:32.1137047Z ##[endgroup]
handle-success	Checkout code	2025-03-26T10:49:32.1142529Z ##[group]Setting up auth
handle-success	Checkout code	2025-03-26T10:49:32.1147033Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
handle-success	Checkout code	2025-03-26T10:49:32.1191055Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
handle-success	Checkout code	2025-03-26T10:49:32.1588362Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
handle-success	Checkout code	2025-03-26T10:49:32.1648062Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
handle-success	Checkout code	2025-03-26T10:49:32.2057192Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
handle-success	Checkout code	2025-03-26T10:49:32.2120842Z ##[endgroup]
handle-success	Checkout code	2025-03-26T10:49:32.2124272Z ##[group]Fetching the repository
handle-success	Checkout code	2025-03-26T10:49:32.2142353Z [command]/usr/bin/git -c protocol.version=2 fetch --prune --no-recurse-submodules origin +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
handle-success	Checkout code	2025-03-26T10:49:32.9645562Z [command]/usr/bin/git branch --list --remote origin/H44-creaci√≥n-m√≥dulo-versionado
handle-success	Checkout code	2025-03-26T10:49:32.9685099Z   origin/H44-creaci√≥n-m√≥dulo-versionado
handle-success	Checkout code	2025-03-26T10:49:32.9699549Z [command]/usr/bin/git rev-parse refs/remotes/origin/H44-creaci√≥n-m√≥dulo-versionado
handle-success	Checkout code	2025-03-26T10:49:32.9731016Z a9104d9f6dcc4823b8601d1b9399c6de67f82fe0
handle-success	Checkout code	2025-03-26T10:49:32.9748197Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules origin +013cd5dafb16189522a6ab3636ed785040717680:refs/remotes/origin/H44-creaci√≥n-m√≥dulo-versionado
handle-success	Checkout code	2025-03-26T10:49:33.7752177Z From https://github.com/Ka0s-Klaus/ka0s
handle-success	Checkout code	2025-03-26T10:49:33.7755795Z  + a9104d9...013cd5d 013cd5dafb16189522a6ab3636ed785040717680 -> origin/H44-creaci√≥n-m√≥dulo-versionado  (forced update)
handle-success	Checkout code	2025-03-26T10:49:33.7852256Z ##[endgroup]
handle-success	Checkout code	2025-03-26T10:49:33.7853410Z ##[group]Determining the checkout info
handle-success	Checkout code	2025-03-26T10:49:33.7854831Z ##[endgroup]
handle-success	Checkout code	2025-03-26T10:49:33.7861299Z [command]/usr/bin/git sparse-checkout disable
handle-success	Checkout code	2025-03-26T10:49:33.7929929Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
handle-success	Checkout code	2025-03-26T10:49:33.7988430Z ##[group]Checking out the ref
handle-success	Checkout code	2025-03-26T10:49:33.7997407Z [command]/usr/bin/git checkout --progress --force -B H44-creaci√≥n-m√≥dulo-versionado refs/remotes/origin/H44-creaci√≥n-m√≥dulo-versionado
handle-success	Checkout code	2025-03-26T10:49:33.8117759Z Warning: you are leaving 1 commit behind, not connected to
handle-success	Checkout code	2025-03-26T10:49:33.8128189Z any of your branches:
handle-success	Checkout code	2025-03-26T10:49:33.8129105Z 
handle-success	Checkout code	2025-03-26T10:49:33.8129882Z   a9104d9 [Ka0S] Uploading resume execution files to the repository...
handle-success	Checkout code	2025-03-26T10:49:33.8131111Z 
handle-success	Checkout code	2025-03-26T10:49:33.8131924Z If you want to keep it by creating a new branch, this may be a good time
handle-success	Checkout code	2025-03-26T10:49:33.8133512Z to do so with:
handle-success	Checkout code	2025-03-26T10:49:33.8134407Z 
handle-success	Checkout code	2025-03-26T10:49:33.8135214Z  git branch <new-branch-name> a9104d9
handle-success	Checkout code	2025-03-26T10:49:33.8135938Z 
handle-success	Checkout code	2025-03-26T10:49:33.8147002Z Switched to a new branch 'H44-creaci√≥n-m√≥dulo-versionado'
handle-success	Checkout code	2025-03-26T10:49:33.8156477Z branch 'H44-creaci√≥n-m√≥dulo-versionado' set up to track 'origin/H44-creaci√≥n-m√≥dulo-versionado'.
handle-success	Checkout code	2025-03-26T10:49:33.8168356Z ##[endgroup]
handle-success	Checkout code	2025-03-26T10:49:33.8228213Z [command]/usr/bin/git log -1 --format=%H
handle-success	Checkout code	2025-03-26T10:49:33.8268623Z 013cd5dafb16189522a6ab3636ed785040717680
handle-success	handle-success-execution	Ôªø2025-03-26T10:49:33.8709116Z ##[group]Run # Si todo ha ido correcto a√±adimos el contenido del fichero 
handle-success	handle-success-execution	2025-03-26T10:49:33.8710265Z [36;1m# Si todo ha ido correcto a√±adimos el contenido del fichero [0m
handle-success	handle-success-execution	2025-03-26T10:49:33.8710962Z [36;1mRNNUMBER=$(echo "refs/heads/H44-creaci√≥n-m√≥dulo-versionado" | grep -o '[0-9]*')[0m
handle-success	handle-success-execution	2025-03-26T10:49:33.8712030Z [36;1mgh issue comment $RNNUMBER --body "El proceso ha finalizado correctamente 14081424992. El resultado est√° en el fichero core/results/event_data14081424992.log"[0m
handle-success	handle-success-execution	2025-03-26T10:49:33.8728023Z shell: /usr/bin/bash -e {0}
handle-success	handle-success-execution	2025-03-26T10:49:33.8728439Z env:
handle-success	handle-success-execution	2025-03-26T10:49:33.8728724Z   KAOS_CODE: 14081424992
handle-success	handle-success-execution	2025-03-26T10:49:33.8729048Z   KAOS_EVENT_NAME: push
handle-success	handle-success-execution	2025-03-26T10:49:33.8729355Z   KAOS_ACTION: 
handle-success	handle-success-execution	2025-03-26T10:49:33.8729722Z   KAOS_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
handle-success	handle-success-execution	2025-03-26T10:49:33.8730154Z   KAOS_MODULE: [Ka0S] kaos
handle-success	handle-success-execution	2025-03-26T10:49:33.8730489Z   KAOS_PATH_RESUME: core/results/
handle-success	handle-success-execution	2025-03-26T10:49:33.8730854Z   KAOS_JSON: core/results/event_data
handle-success	handle-success-execution	2025-03-26T10:49:33.8731283Z   KAOS_ACTOR: Yolabn
handle-success	handle-success-execution	2025-03-26T10:49:33.8731923Z   GH_TOKEN: ***
handle-success	handle-success-execution	2025-03-26T10:49:33.8732218Z ##[endgroup]
handle-success	handle-success-execution	2025-03-26T10:49:35.6203345Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753990019
handle-success	Post Checkout code	Ôªø2025-03-26T10:49:35.6384855Z Post job cleanup.
handle-success	Post Checkout code	2025-03-26T10:49:35.7884275Z [command]/usr/bin/git version
handle-success	Post Checkout code	2025-03-26T10:49:35.7935750Z git version 2.48.1
handle-success	Post Checkout code	2025-03-26T10:49:35.8008855Z Copying '/home/kaos/.gitconfig' to '/actions-runner/_work/_temp/dd810567-d569-435c-b077-498890c3a167/.gitconfig'
handle-success	Post Checkout code	2025-03-26T10:49:35.8026913Z Temporarily overriding HOME='/actions-runner/_work/_temp/dd810567-d569-435c-b077-498890c3a167' before making global git config changes
handle-success	Post Checkout code	2025-03-26T10:49:35.8028945Z Adding repository directory to the temporary git global config as a safe directory
handle-success	Post Checkout code	2025-03-26T10:49:35.8037371Z [command]/usr/bin/git config --global --add safe.directory /actions-runner/_work/ka0s/ka0s
handle-success	Post Checkout code	2025-03-26T10:49:35.8092535Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
handle-success	Post Checkout code	2025-03-26T10:49:35.8157425Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
handle-success	Post Checkout code	2025-03-26T10:49:35.8597357Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
handle-success	Post Checkout code	2025-03-26T10:49:35.8641788Z http.https://github.com/.extraheader
handle-success	Post Checkout code	2025-03-26T10:49:35.8670831Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
handle-success	Post Checkout code	2025-03-26T10:49:35.8724170Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
handle-success	Complete job	Ôªø2025-03-26T10:49:35.9335415Z Cleaning up orphan processes
end-workflow	Set up job	Ôªø2025-03-26T10:49:46.6150299Z Current runner version: '2.323.0'
end-workflow	Set up job	2025-03-26T10:49:46.6162158Z Runner name: 'ka0s-runner-1'
end-workflow	Set up job	2025-03-26T10:49:46.6163331Z Machine name: '181b3e34799e'
end-workflow	Set up job	2025-03-26T10:49:46.6166855Z ##[group]GITHUB_TOKEN Permissions
end-workflow	Set up job	2025-03-26T10:49:46.6170375Z Contents: read
end-workflow	Set up job	2025-03-26T10:49:46.6170974Z Metadata: read
end-workflow	Set up job	2025-03-26T10:49:46.6171505Z Packages: read
end-workflow	Set up job	2025-03-26T10:49:46.6172008Z ##[endgroup]
end-workflow	Set up job	2025-03-26T10:49:46.6175233Z Secret source: Actions
end-workflow	Set up job	2025-03-26T10:49:46.6175968Z Prepare workflow directory
end-workflow	Set up job	2025-03-26T10:49:46.7114367Z Prepare all required actions
end-workflow	Set up job	2025-03-26T10:49:46.7187592Z Getting action download info
end-workflow	Set up job	2025-03-26T10:49:47.4711600Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
end-workflow	Set up job	2025-03-26T10:49:49.6605755Z Complete job name: end-workflow
end-workflow	Checkout code	Ôªø2025-03-26T10:49:49.7532545Z ##[group]Run actions/checkout@v4
end-workflow	Checkout code	2025-03-26T10:49:49.7534980Z with:
end-workflow	Checkout code	2025-03-26T10:49:49.7535907Z   fetch-depth: 0
end-workflow	Checkout code	2025-03-26T10:49:49.7537454Z   token: ***
end-workflow	Checkout code	2025-03-26T10:49:49.7538436Z   repository: Ka0s-Klaus/ka0s
end-workflow	Checkout code	2025-03-26T10:49:49.7539655Z   ssh-strict: true
end-workflow	Checkout code	2025-03-26T10:49:49.7540607Z   ssh-user: git
end-workflow	Checkout code	2025-03-26T10:49:49.7541584Z   persist-credentials: true
end-workflow	Checkout code	2025-03-26T10:49:49.7542691Z   clean: true
end-workflow	Checkout code	2025-03-26T10:49:49.7543684Z   sparse-checkout-cone-mode: true
end-workflow	Checkout code	2025-03-26T10:49:49.7545448Z   fetch-tags: false
end-workflow	Checkout code	2025-03-26T10:49:49.7546462Z   show-progress: true
end-workflow	Checkout code	2025-03-26T10:49:49.7547466Z   lfs: false
end-workflow	Checkout code	2025-03-26T10:49:49.7548383Z   submodules: false
end-workflow	Checkout code	2025-03-26T10:49:49.7549868Z   set-safe-directory: true
end-workflow	Checkout code	2025-03-26T10:49:49.7551348Z env:
end-workflow	Checkout code	2025-03-26T10:49:49.7552222Z   KAOS_CODE: 14081424992
end-workflow	Checkout code	2025-03-26T10:49:49.7553295Z   KAOS_EVENT_NAME: push
end-workflow	Checkout code	2025-03-26T10:49:49.7554785Z   KAOS_ACTION: 
end-workflow	Checkout code	2025-03-26T10:49:49.7556100Z   KAOS_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
end-workflow	Checkout code	2025-03-26T10:49:49.7557610Z   KAOS_MODULE: [Ka0S] kaos
end-workflow	Checkout code	2025-03-26T10:49:49.7558816Z   KAOS_PATH_RESUME: core/results/
end-workflow	Checkout code	2025-03-26T10:49:49.7560075Z   KAOS_JSON: core/results/event_data
end-workflow	Checkout code	2025-03-26T10:49:49.7561335Z   KAOS_ACTOR: Yolabn
end-workflow	Checkout code	2025-03-26T10:49:49.7564329Z   GH_TOKEN: ***
end-workflow	Checkout code	2025-03-26T10:49:49.7565303Z ##[endgroup]
end-workflow	Checkout code	2025-03-26T10:49:49.9376539Z Syncing repository: Ka0s-Klaus/ka0s
end-workflow	Checkout code	2025-03-26T10:49:49.9380051Z ##[group]Getting Git version info
end-workflow	Checkout code	2025-03-26T10:49:49.9381613Z Working directory is '/actions-runner/_work/ka0s/ka0s'
end-workflow	Checkout code	2025-03-26T10:49:49.9384187Z [command]/usr/bin/git version
end-workflow	Checkout code	2025-03-26T10:49:49.9385925Z git version 2.48.1
end-workflow	Checkout code	2025-03-26T10:49:49.9410086Z ##[endgroup]
end-workflow	Checkout code	2025-03-26T10:49:49.9434764Z Copying '/home/kaos/.gitconfig' to '/actions-runner/_work/_temp/78ab12e8-87f1-4a47-9f86-01a1edea63de/.gitconfig'
end-workflow	Checkout code	2025-03-26T10:49:49.9465848Z Temporarily overriding HOME='/actions-runner/_work/_temp/78ab12e8-87f1-4a47-9f86-01a1edea63de' before making global git config changes
end-workflow	Checkout code	2025-03-26T10:49:49.9473185Z Adding repository directory to the temporary git global config as a safe directory
end-workflow	Checkout code	2025-03-26T10:49:49.9479083Z [command]/usr/bin/git config --global --add safe.directory /actions-runner/_work/ka0s/ka0s
end-workflow	Checkout code	2025-03-26T10:49:49.9554781Z [command]/usr/bin/git config --local --get remote.origin.url
end-workflow	Checkout code	2025-03-26T10:49:49.9584450Z https://github.com/Ka0s-Klaus/ka0s
end-workflow	Checkout code	2025-03-26T10:49:49.9613652Z ##[group]Removing previously created refs, to avoid conflicts
end-workflow	Checkout code	2025-03-26T10:49:49.9622533Z [command]/usr/bin/git rev-parse --symbolic-full-name --verify --quiet HEAD
end-workflow	Checkout code	2025-03-26T10:49:49.9663197Z refs/heads/H44-creaci√≥n-m√≥dulo-versionado
end-workflow	Checkout code	2025-03-26T10:49:49.9679296Z [command]/usr/bin/git checkout --detach
end-workflow	Checkout code	2025-03-26T10:49:49.9778477Z HEAD is now at 013cd5d pruebas json y md
end-workflow	Checkout code	2025-03-26T10:49:49.9854022Z [command]/usr/bin/git branch --delete --force H44-creaci√≥n-m√≥dulo-versionado
end-workflow	Checkout code	2025-03-26T10:49:49.9896022Z Deleted branch H44-creaci√≥n-m√≥dulo-versionado (was 013cd5d).
end-workflow	Checkout code	2025-03-26T10:49:49.9973389Z ##[endgroup]
end-workflow	Checkout code	2025-03-26T10:49:49.9979037Z [command]/usr/bin/git submodule status
end-workflow	Checkout code	2025-03-26T10:49:50.0387924Z ##[group]Cleaning the repository
end-workflow	Checkout code	2025-03-26T10:49:50.0390457Z [command]/usr/bin/git clean -ffdx
end-workflow	Checkout code	2025-03-26T10:49:50.0456421Z [command]/usr/bin/git reset --hard HEAD
end-workflow	Checkout code	2025-03-26T10:49:50.0571920Z HEAD is now at 013cd5d pruebas json y md
end-workflow	Checkout code	2025-03-26T10:49:50.0581598Z ##[endgroup]
end-workflow	Checkout code	2025-03-26T10:49:50.0583502Z ##[group]Disabling automatic garbage collection
end-workflow	Checkout code	2025-03-26T10:49:50.0591259Z [command]/usr/bin/git config --local gc.auto 0
end-workflow	Checkout code	2025-03-26T10:49:50.0647550Z ##[endgroup]
end-workflow	Checkout code	2025-03-26T10:49:50.0651082Z ##[group]Setting up auth
end-workflow	Checkout code	2025-03-26T10:49:50.0658593Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
end-workflow	Checkout code	2025-03-26T10:49:50.0710111Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
end-workflow	Checkout code	2025-03-26T10:49:50.1198315Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
end-workflow	Checkout code	2025-03-26T10:49:50.1259636Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
end-workflow	Checkout code	2025-03-26T10:49:50.1722516Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
end-workflow	Checkout code	2025-03-26T10:49:50.1790286Z ##[endgroup]
end-workflow	Checkout code	2025-03-26T10:49:50.1793540Z ##[group]Fetching the repository
end-workflow	Checkout code	2025-03-26T10:49:50.1807930Z [command]/usr/bin/git -c protocol.version=2 fetch --prune --no-recurse-submodules origin +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
end-workflow	Checkout code	2025-03-26T10:49:51.0083170Z From https://github.com/Ka0s-Klaus/ka0s
end-workflow	Checkout code	2025-03-26T10:49:51.0084732Z    013cd5d..a9104d9  H44-creaci√≥n-m√≥dulo-versionado -> origin/H44-creaci√≥n-m√≥dulo-versionado
end-workflow	Checkout code	2025-03-26T10:49:51.0197461Z [command]/usr/bin/git branch --list --remote origin/H44-creaci√≥n-m√≥dulo-versionado
end-workflow	Checkout code	2025-03-26T10:49:51.0231164Z   origin/H44-creaci√≥n-m√≥dulo-versionado
end-workflow	Checkout code	2025-03-26T10:49:51.0245704Z [command]/usr/bin/git rev-parse refs/remotes/origin/H44-creaci√≥n-m√≥dulo-versionado
end-workflow	Checkout code	2025-03-26T10:49:51.0278238Z a9104d9f6dcc4823b8601d1b9399c6de67f82fe0
end-workflow	Checkout code	2025-03-26T10:49:51.0310601Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules origin +013cd5dafb16189522a6ab3636ed785040717680:refs/remotes/origin/H44-creaci√≥n-m√≥dulo-versionado
end-workflow	Checkout code	2025-03-26T10:49:51.7053060Z From https://github.com/Ka0s-Klaus/ka0s
end-workflow	Checkout code	2025-03-26T10:49:51.7077103Z  + a9104d9...013cd5d 013cd5dafb16189522a6ab3636ed785040717680 -> origin/H44-creaci√≥n-m√≥dulo-versionado  (forced update)
end-workflow	Checkout code	2025-03-26T10:49:51.7146533Z ##[endgroup]
end-workflow	Checkout code	2025-03-26T10:49:51.7147607Z ##[group]Determining the checkout info
end-workflow	Checkout code	2025-03-26T10:49:51.7149973Z ##[endgroup]
end-workflow	Checkout code	2025-03-26T10:49:51.7159999Z [command]/usr/bin/git sparse-checkout disable
end-workflow	Checkout code	2025-03-26T10:49:51.7225137Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
end-workflow	Checkout code	2025-03-26T10:49:51.7269146Z ##[group]Checking out the ref
end-workflow	Checkout code	2025-03-26T10:49:51.7280172Z [command]/usr/bin/git checkout --progress --force -B H44-creaci√≥n-m√≥dulo-versionado refs/remotes/origin/H44-creaci√≥n-m√≥dulo-versionado
end-workflow	Checkout code	2025-03-26T10:49:51.7391642Z Switched to a new branch 'H44-creaci√≥n-m√≥dulo-versionado'
end-workflow	Checkout code	2025-03-26T10:49:51.7397368Z branch 'H44-creaci√≥n-m√≥dulo-versionado' set up to track 'origin/H44-creaci√≥n-m√≥dulo-versionado'.
end-workflow	Checkout code	2025-03-26T10:49:51.7406007Z ##[endgroup]
end-workflow	Checkout code	2025-03-26T10:49:51.7476804Z [command]/usr/bin/git log -1 --format=%H
end-workflow	Checkout code	2025-03-26T10:49:51.7518144Z 013cd5dafb16189522a6ab3636ed785040717680
end-workflow	Finaliza el workflow	Ôªø2025-03-26T10:49:51.7851784Z ##[group]Run echo "End process"
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7852407Z [36;1mecho "End process"[0m
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7852993Z [36;1mRNNUMBER=$(echo "refs/heads/H44-creaci√≥n-m√≥dulo-versionado" | grep -o '[0-9]*')[0m
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7853715Z [36;1mgh issue comment $RNNUMBER --body "Se finaliza Ka0s 14081424992"[0m
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7855043Z [36;1mgh workflow run inspector.yml --ref 'main' -f kaos-issue-id=$RNNUMBER -f kaos-workflow-id="14081424992" -f kaos-user-start=""[0m
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7871150Z shell: /usr/bin/bash -e {0}
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7871563Z env:
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7871855Z   KAOS_CODE: 14081424992
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7872565Z   KAOS_EVENT_NAME: push
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7872924Z   KAOS_ACTION: 
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7873293Z   KAOS_REF: refs/heads/H44-creaci√≥n-m√≥dulo-versionado
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7873722Z   KAOS_MODULE: [Ka0S] kaos
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7874733Z   KAOS_PATH_RESUME: core/results/
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7875120Z   KAOS_JSON: core/results/event_data
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7875647Z   KAOS_ACTOR: Yolabn
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7876350Z   GH_TOKEN: ***
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7876694Z ##[endgroup]
end-workflow	Finaliza el workflow	2025-03-26T10:49:51.7958159Z End process
end-workflow	Finaliza el workflow	2025-03-26T10:49:53.0288822Z https://github.com/Ka0s-Klaus/ka0s/issues/44#issuecomment-2753990771
end-workflow	Post Checkout code	Ôªø2025-03-26T10:49:54.0815023Z Post job cleanup.
end-workflow	Post Checkout code	2025-03-26T10:49:54.2390486Z [command]/usr/bin/git version
end-workflow	Post Checkout code	2025-03-26T10:49:54.2447480Z git version 2.48.1
end-workflow	Post Checkout code	2025-03-26T10:49:54.2514262Z Copying '/home/kaos/.gitconfig' to '/actions-runner/_work/_temp/1cdf6a0a-8ad6-41ae-a5b3-858204b13caa/.gitconfig'
end-workflow	Post Checkout code	2025-03-26T10:49:54.2544751Z Temporarily overriding HOME='/actions-runner/_work/_temp/1cdf6a0a-8ad6-41ae-a5b3-858204b13caa' before making global git config changes
end-workflow	Post Checkout code	2025-03-26T10:49:54.2546820Z Adding repository directory to the temporary git global config as a safe directory
end-workflow	Post Checkout code	2025-03-26T10:49:54.2551419Z [command]/usr/bin/git config --global --add safe.directory /actions-runner/_work/ka0s/ka0s
end-workflow	Post Checkout code	2025-03-26T10:49:54.2615069Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
end-workflow	Post Checkout code	2025-03-26T10:49:54.2704627Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
end-workflow	Post Checkout code	2025-03-26T10:49:54.3201150Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
end-workflow	Post Checkout code	2025-03-26T10:49:54.3232052Z http.https://github.com/.extraheader
end-workflow	Post Checkout code	2025-03-26T10:49:54.3250018Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
end-workflow	Post Checkout code	2025-03-26T10:49:54.3310768Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
end-workflow	Complete job	Ôªø2025-03-26T10:49:54.3870742Z Cleaning up orphan processes
