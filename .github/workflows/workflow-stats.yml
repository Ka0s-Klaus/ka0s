name: Ka0s Workflow Statistics Summary

on:
  schedule:
    - cron: '0 * * * *'  # Ejecución cada hora en el minuto 0
  workflow_dispatch:  # Allow manual trigger
  
permissions:
  contents: write
  actions: write
  issues: write
  
env:
    KAOS_CODE: ${{ github.run_id }}
    KAOS_EVENT_NAME: ${{ github.event_name }}
    KAOS_ACTION: ${{ github.action }}
    KAOS_REF: ${{ github.ref }}
    KAOS_MODULE: "[Ka0S] Workflow Statistics Summary"
    KAOS_PATH_RESUME: "audit/workflows/"
    KAOS_ACTOR: ${{ github.actor }}
    GH_REPO: "github.com/Ka0s-Klaus/ka0s"

jobs:
  job-core:
    runs-on:
      group: ka0s
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}

      - name: Commit and push changes
        run: |
          git config --global user.name "${{ secrets.KAOS_BOT_NAME }}"
          git config --global user.email "${{ secrets.KAOS_BOT_EMAIL }}"
          git pull

  job-stats:
    runs-on:
      group: ka0s
    needs: job-core
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
  
      - name: Generate actually workflows
        run: |
          # Pull the latest changes
          git config --global user.name "${{ secrets.KAOS_BOT_NAME }}"
          git config --global user.email "${{ secrets.KAOS_BOT_EMAIL }}"
          git pull
  
          # Created files of actually workflows
          gh workflow list -a --json id,name,path,state | tee >(jq . > ${{ env.KAOS_PATH_RESUME }}actually-workflows.json) | jq -r '
              ["id", "name", "path", "state"],
              (.[] | [
                .id,
                .name,
                .path,
                .state
              ]) | @csv
            ' > ${{ env.KAOS_PATH_RESUME }}actually-workflows.csv
  
          # Created files of workflows executed up to the current extraction date
          # Create a temporary file for workflow runs
            touch ${{ env.KAOS_PATH_RESUME }}workflows-runs-${{ env.KAOS_CODE }}.json
            
          # Get workflows and process their runs
          workflows=$(jq -r '.[].id' ${{ env.KAOS_PATH_RESUME }}actually-workflows.json)
          
          # Initialize an empty array in the temporary file
          echo '[]' > ${{ env.KAOS_PATH_RESUME }}workflows-runs-${{ env.KAOS_CODE }}.json
          
          # Iterate over each workflow and get runs with proper formatting
          for workflow_id in $workflows; do
            gh api repos/:owner/:repo/actions/workflows/$workflow_id/runs --paginate | \
              jq '.workflow_runs[] | select(.id != null)' | \
              jq -s '[ .[] | {
                id,
                name,
                head_branch,
                head_sha,
                run_number,
                event,
                status,
                conclusion,
                workflow_id,
                url,
                created_at,
                updated_at,
                run_started_at
              }]' >> ${{ env.KAOS_PATH_RESUME }}workflows-runs-temp-${{ env.KAOS_CODE }}.json
            
            # Merge the temporary results into the main file
            jq -s 'add' \
              ${{ env.KAOS_PATH_RESUME }}workflows-runs-${{ env.KAOS_CODE }}.json \
              ${{ env.KAOS_PATH_RESUME }}workflows-runs-temp-${{ env.KAOS_CODE }}.json > \
              ${{ env.KAOS_PATH_RESUME }}workflows-runs-merged-${{ env.KAOS_CODE }}.json
            
            mv ${{ env.KAOS_PATH_RESUME }}workflows-runs-merged-${{ env.KAOS_CODE }}.json \
               ${{ env.KAOS_PATH_RESUME }}workflows-runs-${{ env.KAOS_CODE }}.json
            rm -f ${{ env.KAOS_PATH_RESUME }}workflows-runs-temp-${{ env.KAOS_CODE }}.json
          done
            
          # Format the final runs file as a proper JSON array
          jq 'sort_by(.created_at) | reverse' \
            ${{ env.KAOS_PATH_RESUME }}workflows-runs-${{ env.KAOS_CODE }}.json > \
            ${{ env.KAOS_PATH_RESUME }}actually-workflows-runs.json
  
          # Extraemos toda la información de las issues hasta el momento
              touch ${{ env.KAOS_PATH_RESUME }}issue-log-${{ env.KAOS_CODE }}.json
              gh issue list --repo ${{ env.GH_REPO }} --state all --limit 999 --json assignees,author,body,closed,closedAt,comments,createdAt,id,labels,milestone,number,projectCards,projectItems,reactionGroups,state,title,updatedAt,url \
                | tee ${{ env.KAOS_PATH_RESUME }}issue-log-${{ env.KAOS_CODE }}.json \
                | jq -r '
                  ["assignees", "author", "body", "closed", "closedAt", "comments", "createdAt", "id", "labels", "milestone", "number", "projectCards", "projectItems", "reactionGroups", "state", "title", "updatedAt", "url"],
                  (.[] | [
                    .assignees,
                    .author,
                    .body,
                    .closed,
                    .closedAt,
                    .comments,
                    .createdAt,
                    .id,
                    .labels,
                    .milestone,
                    .number,
                    .projectCards,
                    .projectItems,
                    .reactionGroups,
                    .state,
                    .title,
                    .updatedAt,
                    .url
                  ]) | @csv
                ' > ${{ env.KAOS_PATH_RESUME }}actually-issue.csv
  
              # Formatear el archivo JSON final
              cat ${{ env.KAOS_PATH_RESUME }}issue-log-${{ env.KAOS_CODE }}.json | jq -s '.' > ${{ env.KAOS_PATH_RESUME }}actually-issue.json

  handle-success:
    runs-on:
      group: ka0s
    needs: [job-core, job-stats]
    if: ${{ success() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-success-execution
        name: handle-success-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          # RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          # gh issue comment $RNNUMBER --body "El proceso ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data_${{ env.KAOS_CODE }}.log"
          echo "El proceso ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data_${{ env.KAOS_CODE }}.log"

  handle_failure:
    runs-on:
      group: ka0s
    needs: [job-core, handle-success]
    if: ${{ failure() }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: handle-failure-execution
        name: handle-failure-execution
        env:
          GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
        run: |
          echo "Error detected in process"
          # RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          # gh issue comment $RNNUMBER --body "El proceso no ha finalizado correctamente ${{ env.KAOS_CODE }}. El resultado está en el fichero core/results/event_data${{ env.KAOS_CODE }}.log"
          # Creamos la issue dado que ha fallado el modulo principal
          gh issue create  --title "[Ka0S] Error detected in ${{ env.KAOS_MODULE }}" --body "Error detected in ${{ env.KAOS_MODULE }}. Please check the logs for ${{ github.run_id }} more information of error."
          
  end-workflow:
    runs-on:
      group: ka0s
    needs: [job-core, job-stats, handle-success, handle_failure]
    if: ${{ always() && !contains(github.event.head_commit.message, '[Ka0S] ') }}
    env:
        GH_TOKEN: ${{ secrets.KAOS_REPO_TOKEN }}
    steps:
      - id: repo
        name: Checkout code
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.KAOS_REPO_TOKEN }}
      - id: end-process
        name: Finaliza el workflow
        run: |
          echo "End process"
          # RNNUMBER=$(echo "${{ github.ref }}" | grep -o '[0-9]*')
          # gh issue comment $RNNUMBER --body "Se finaliza Ka0s ${{ env.KAOS_CODE }}"
          echo "Se finaliza Ka0s ${{ env.KAOS_CODE }}"
          gh workflow run inspector.yml --ref 'main' -f kaos-workflow-id="${{ env.KAOS_CODE }}" -f kaos-user-start=""
