version: '3.8'

services:
  github-actions-manager:
    # --- SIN CAMBIOS ---
    image: alpine:latest
    environment:
      - RUNNER_SERVICE_NAME=kaosrunner_github-actions-runner
      - MAX_RUNNERS=30
      - LOOP_INTERVAL=15
    command: >
      sh -c "apk add --no-cache curl jq docker-cli openssl coreutils && sh /manager.sh"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: manager_script
        target: /manager.sh
    secrets:
      - github_app_id
      - github_installation_id
      - github_app_private_key
      - github_scope
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  github-actions-runner:
    image: ghcr.io/actions/actions-runner:latest
    # --- ¡CAMBIO CLAVE! El usuario de inicio es root ---
    environment:
      - REPO_URL=https://github.com/Ka0s-Klaus
      - RUNNER_LABELS=self-hosted,linux,x64,swarm-runner
      - EPHEMERAL=true
    
    # --- ¡CAMBIO CLAVE! El runner ahora leerá el config de paquetes ---
    configs:
      - source: runner_packages
        target: /home/runner/runner_packages.list

    command:
      - "sh"
      - "-c"
      - |
        echo "--- Iniciando como usuario `whoami` ---"

        # --- FASE 1: INSTALACIÓN CON SUDO ---
        # Creamos un bloque de script que se ejecutará enteramente con sudo.
        # Hereda las variables de entorno, por lo que PACKAGES_TO_INSTALL funciona.
        
        # --- FASE 2: CONFIGURACIÓN Y EJECUCIÓN COMO 'runner' ---
        # El script principal continúa aquí, como el usuario 'runner' original.
        echo "--- Volviendo al contexto del usuario `whoami` ---"
        
        # 4. Configurar y ejecutar el runner (ya somos el usuario correcto )
        RUNNER_NAME="swarm-runner-`hostname`"
        echo "--- Configurando el runner ${RUNNER_NAME} ---"
        
        # Usamos el token dinámico inyectado por el manager
        ./config.sh --unattended --replace \
          --url https://github.com/Ka0s-Klaus \
          --token BO7XQAO5DGKIWVI2XTD2RVDIZU6KK \
          --labels swarm-runner \
          --runnergroup swarm-runners \
          --ephemeral
        sleep 5  
        echo "--- Configuración completada. Ejecutando el runner. ---"
        sleep 5
        ./run.sh
    deploy:
      mode: replicated
      replicas: 0

# ... (secrets y manager_script sin cambios) ...
secrets:
  github_app_id:
    external: true
  github_installation_id:
    external: true
  github_app_private_key:
    external: true
  github_scope:
    external: true

configs:
  manager_script:
    external: true
  # --- ¡NUEVO! Declaramos el config de paquetes ---
  runner_packages:
    external: true
